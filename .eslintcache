[{"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js":"1","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx":"2","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx":"3","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx":"4","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js":"5","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx":"6","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx":"7","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx":"8","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx":"9","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js":"10","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx":"11","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx":"12","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx":"13","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx":"14","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx":"15","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx":"16","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx":"17","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx":"18","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx":"19","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx":"20","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx":"21","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx":"22","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js":"23","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx":"24","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx":"25","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx":"26","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx":"27","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx":"28","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx":"29","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js":"30","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx":"31","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx":"32","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx":"33","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx":"34","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx":"35","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx":"36","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx":"37","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx":"38","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js":"39","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx":"40","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx":"41","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js":"42","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx":"43","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx":"44","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddScreen.jsx":"45","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddForm.jsx":"46","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Phone.jsx":"47","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Invoice.jsx":"48","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\InvoiceRow.jsx":"49","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\InvoiceTable.jsx":"50"},{"size":861,"mtime":1610749516583,"results":"51","hashOfConfig":"52"},{"size":476,"mtime":1606623088205,"results":"53","hashOfConfig":"54"},{"size":3276,"mtime":1610683233866,"results":"55","hashOfConfig":"52"},{"size":473,"mtime":1606623429061,"results":"56","hashOfConfig":"52"},{"size":681,"mtime":1608584517617,"results":"57","hashOfConfig":"52"},{"size":1754,"mtime":1607012898410,"results":"58","hashOfConfig":"54"},{"size":1701,"mtime":1610683589707,"results":"59","hashOfConfig":"52"},{"size":1943,"mtime":1606706941401,"results":"60","hashOfConfig":"52"},{"size":5134,"mtime":1606691876711,"results":"61","hashOfConfig":"54"},{"size":325,"mtime":1606257461394,"results":"62","hashOfConfig":"52"},{"size":376,"mtime":1606613325284,"results":"63","hashOfConfig":"64"},{"size":21036,"mtime":1606276172610,"results":"65","hashOfConfig":"54"},{"size":892,"mtime":1608777192124,"results":"66","hashOfConfig":"52"},{"size":8598,"mtime":1610759551575,"results":"67","hashOfConfig":"52"},{"size":1478,"mtime":1606971209791,"results":"68","hashOfConfig":"52"},{"size":1962,"mtime":1606691437861,"results":"69","hashOfConfig":"54"},{"size":4003,"mtime":1610747885608,"results":"70","hashOfConfig":"52"},{"size":1018,"mtime":1606762734515,"results":"71","hashOfConfig":"52"},{"size":3811,"mtime":1607018214562,"results":"72","hashOfConfig":"54"},{"size":2184,"mtime":1606867602502,"results":"73","hashOfConfig":"54"},{"size":4531,"mtime":1607018170537,"results":"74","hashOfConfig":"54"},{"size":852,"mtime":1606865435925,"results":"75","hashOfConfig":"54"},{"size":885,"mtime":1610749455584,"results":"76","hashOfConfig":"52"},{"size":230,"mtime":1606867679787,"results":"77","hashOfConfig":"54"},{"size":430,"mtime":1606867536055,"results":"78","hashOfConfig":"54"},{"size":1319,"mtime":1607123383982,"results":"79","hashOfConfig":"52"},{"size":2404,"mtime":1608049615617,"results":"80","hashOfConfig":"52"},{"size":4413,"mtime":1606880872215,"results":"81","hashOfConfig":"54"},{"size":905,"mtime":1610649814683,"results":"82","hashOfConfig":"64"},{"size":4214,"mtime":1609901113003,"results":"83","hashOfConfig":"52"},{"size":1342,"mtime":1606613325883,"results":"84","hashOfConfig":"52"},{"size":2201,"mtime":1608075815566,"results":"85","hashOfConfig":"52"},{"size":2666,"mtime":1608049115190,"results":"86","hashOfConfig":"64"},{"size":915,"mtime":1606434072191,"results":"87","hashOfConfig":"64"},{"size":8740,"mtime":1607559969261,"results":"88","hashOfConfig":"64"},{"size":5118,"mtime":1610747885611,"results":"89","hashOfConfig":"52"},{"size":1984,"mtime":1607115051919,"results":"90","hashOfConfig":"64"},{"size":33573,"mtime":1608416204013,"results":"91","hashOfConfig":"64"},{"size":1950,"mtime":1610759365942,"results":"92","hashOfConfig":"52"},{"size":21080,"mtime":1610677984775,"results":"93","hashOfConfig":"52"},{"size":9500,"mtime":1610658162430,"results":"94","hashOfConfig":"52"},{"size":8951,"mtime":1610759566084,"results":"95","hashOfConfig":"52"},{"size":5815,"mtime":1610297879274,"results":"96","hashOfConfig":"52"},{"size":4527,"mtime":1610144700519,"results":"97","hashOfConfig":"52"},{"size":4318,"mtime":1610642231729,"results":"98","hashOfConfig":"52"},{"size":9798,"mtime":1610747885609,"results":"99","hashOfConfig":"52"},{"size":1403,"mtime":1608872382775,"results":"100","hashOfConfig":"64"},{"size":1532,"mtime":1609445439985,"results":"101","hashOfConfig":"64"},{"size":3157,"mtime":1610656614835,"results":"102","hashOfConfig":"52"},{"size":3328,"mtime":1610676221389,"results":"103","hashOfConfig":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"xs89dj",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1keiamg",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"6chska",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"117"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js",[],["217","218"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx",[],["219","220"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx",["221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    Form,\r\n    Grid,\r\n    Input,\r\n    Button,\r\n    Message,\r\n    Icon,\r\n    Divider,\r\n    Container,\r\n    Step,\r\n} from 'semantic-ui-react';\r\nimport { reset } from 'redux-form';\r\nimport { formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport MemberModalButton from './FindMemberModal';\r\nimport BuyModalButton from './BuyModal';\r\nimport Proptype from 'prop-types';\r\n\r\nconst FindForm = (props) => {\r\n    const {\r\n        handleSubmit,\r\n        findForm: { submitSucceeded },\r\n        phone,\r\n        membership,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        phoneProps,\r\n        history,\r\n    } = props;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const loginUser = (values) => {\r\n        console.log('LoginForm was submitted', { values });\r\n    };\r\n\r\n    const clearErrorMessage = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            textAlign='center'\r\n            style={{ height: '100vh' }}\r\n            verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Form onSubmit={handleSubmit(loginUser)} size='large'>\r\n                    <Field {...phoneProps} onFocus={clearErrorMessage} />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='membership'\r\n                        placeholder='xxxxxxx'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='address card'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='firstName'\r\n                        placeholder='First Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='lastName'\r\n                        placeholder='Last Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <MemberModalButton />\r\n                    <Form.Button\r\n                        circular\r\n                        fluid\r\n                        size='massive'\r\n                        color='blue'\r\n                        content='Logout'\r\n                        icon='sign-out'\r\n                        labelPosition='right'\r\n                        onClick={(event, data) => {\r\n                            event.preventDefault();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Form>\r\n                {errorMessage ? (\r\n                    <Message icon color='pink'>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Header>{errorMessage}</Message.Header>\r\n                    </Message>\r\n                ) : null}\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFindForm.defaultProps = {\r\n    phoneProps: {\r\n        className: 'findPhoneField',\r\n        component: Form.Input,\r\n        name: 'phone',\r\n        type: 'tel',\r\n        placeholder: '(408)-123-4567',\r\n        focus: true,\r\n        size: 'massive',\r\n        fluid: true,\r\n        icon: 'phone',\r\n        iconPosition: 'left',\r\n        transparent: true,\r\n        inverted: true,\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('find');\r\n    return {\r\n        phone: selectFormData(state, 'phone'),\r\n        membership: selectFormData(state, 'membership'),\r\n        firstName: selectFormData(state, 'firstName'),\r\n        lastName: selectFormData(state, 'lastName'),\r\n        findForm: state.form.find\r\n            ? {\r\n                  values: state.form.find.values,\r\n                  submitSucceeded: state.form.find.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('find')),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(reduxForm({ form: 'find' })(FindForm));\r\n",["234","235"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx",[],["236","237"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx",["238","239","240"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, formValueSelector } from 'redux-form';\r\nimport {\r\n    TransitionablePortal,\r\n    Segment,\r\n    Divider,\r\n    Header,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport FindGrid from '../Grid/Grid';\r\nimport FindForm from './FindForm';\r\nimport FindLogoutButton from './FindLogoutButton';\r\nimport * as actions from '../../../actions';\r\nimport { currentDate, getCurrentTime } from '../../helpers/helpers';\r\nfunction FindContainer(props) {\r\n    const {\r\n        submitSucceeded,\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        history,\r\n        find,\r\n        focusInput,\r\n        handleSubmit,\r\n        clearFields,\r\n        membership,\r\n        clearMembership,\r\n        getAccount,\r\n        getDailyReport,\r\n    } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    const [duration, setDuration] = useState(500);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n    const [reportDate, setReportDate] = useState(currentDate());\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (membership.error) {\r\n            clearForm();\r\n        }\r\n    }, [clearForm, membership.error]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onClose={() => console.log('onClose', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <FindGrid>\r\n                    <Header as='h1' inverted size='huge' textAlign='left'>\r\n                        <Icon name='braille' color='blue' />\r\n                        <Header.Content>\r\n                            Mckee Pure Water\r\n                            <Header.Subheader>Version 1.0</Header.Subheader>\r\n                        </Header.Content>\r\n                    </Header>\r\n                    <Divider />\r\n                    <FindForm\r\n                        getAccount={getAccount}\r\n                        setOpenFind={setOpen}\r\n                        clearMembership={clearMembership}\r\n                        membership={membership}\r\n                        find={find}\r\n                        history={history}\r\n                        disableFindButton={disableFindButton}\r\n                        clearFields={clearFields}\r\n                        hideLogoutButton={setHideLogoutButton}\r\n                        closeMe={setCloseMe}\r\n                        clearForm={clearForm}\r\n                        size='large'\r\n                        handleSubmit={handleSubmit}\r\n                        iconColor={iconColor}\r\n                        errorMessage={errorMessage}\r\n                        phone={phone}\r\n                        account={account}\r\n                        firstName={firstName}\r\n                        lastName={lastName}\r\n                        logout={() => history.push('/')}\r\n                        focusInput={focusInput}\r\n                        submitSucceeded={submitSucceeded}\r\n                        setOpen={setOpen}\r\n                        setErrorMessage={setErrorMessage}\r\n                        setIconColor={setIconColor}\r\n                        setAnimation={setAnimation}\r\n                    />\r\n                    <Divider hidden />\r\n                    <Button\r\n                        disabled={\r\n                            phone || account || firstName || lastName\r\n                                ? true\r\n                                : false\r\n                        }\r\n                        color='teal'\r\n                        circular={true}\r\n                        fluid={true}\r\n                        size='massive'\r\n                        id='AddButton'\r\n                        icon='add circle'\r\n                        labelPosition='right'\r\n                        content='Add New Membership'\r\n                        onClick={() => {\r\n                            console.log('Add New MemberShip');\r\n                            props.getLastAccount(() => {\r\n                                props.getLastRecord(() => {\r\n                                    props.history.push('/add');\r\n                                });\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Divider hidden />\r\n\r\n                    <Button\r\n                        color='pink'\r\n                        circular={true}\r\n                        fluid={true}\r\n                        size='massive'\r\n                        id='ReportButton'\r\n                        icon='file outline'\r\n                        labelPosition='right'\r\n                        content={`Daily Report: ${currentDate()}`}\r\n                        onClick={() => {\r\n                            console.log('Daily Report', currentDate());\r\n                            // getDailyReport('12/4/2020', (data) => {\r\n                            getDailyReport(\r\n                                currentDate(),\r\n                                getCurrentTime(),\r\n                                (data) => {\r\n                                    console.log({ data });\r\n                                }\r\n                            );\r\n                        }}\r\n                    />\r\n\r\n                    <Divider hidden />\r\n                    <FindLogoutButton\r\n                        hide={hideLogoutButton}\r\n                        hideField={setHideLogoutButton}\r\n                        logout={() => {\r\n                            setOpen(false);\r\n                            clearMembership();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                    {/* <Input\r\n                        action={{\r\n                            color: 'teal',\r\n                            labelPosition: 'left',\r\n                            icon: 'cart',\r\n                            content: 'Checkout',\r\n                            circular: true,\r\n                        }}\r\n                        type='date'\r\n                        actionPosition='left'\r\n                        placeholder='Sales Report'\r\n                        // value={reportDate}\r\n                        defaultValue={reportDate}\r\n                    /> */}\r\n                    {/* <Debug /> */}\r\n                </FindGrid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        membership: state.membership,\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, actions)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx",["241"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx",["242","243"],"import React from 'react';\r\nimport { List, Button } from 'semantic-ui-react';\r\nimport BuyModal from './BuyModal';\r\n\r\nconst MemberRow = (props) => {\r\n    const [open, openBuyModal] = React.useState(false);\r\n    const { close } = props;\r\n\r\n    return (\r\n        <List verticalAlign='middle' size='large' inverted>\r\n            <List.Item>\r\n                <List.Content floated='right'>\r\n                    {/* <BuyModal\r\n                        setOpen={openBuyModal}\r\n                        open={open}\r\n                        closeOnDimmerClick={false}\r\n                        closeOnEscape={false}\r\n                        hideField={props.hideField}\r\n                        hideMemberRow={props.hideRow}\r\n                    /> */}\r\n\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='pink'\r\n                                content='Buy'\r\n                                labelPosition='right'\r\n                                icon='plus cart'\r\n                                onClick={() => {\r\n                                    openBuyModal(true);\r\n                                    props.hideRow(true);\r\n                                    props.history.push('/buy');\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='facebook'\r\n                                content='Renew'\r\n                                labelPosition='right'\r\n                                icon='redo'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='twitter'\r\n                                content='Edit'\r\n                                labelPosition='right'\r\n                                icon='edit'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Invoice'\r\n                                labelPosition='right'\r\n                                icon='sticky note'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='red'\r\n                                content='Done'\r\n                                labelPosition='right'\r\n                                icon='close'\r\n                                onClick={close}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n                <List.Content>\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='302039'\r\n                                icon='gg'\r\n                            />\r\n                            <Button\r\n                                inverted\r\n                                circular\r\n                                color='grey'\r\n                                size='large'\r\n                                content='Hung Quach'\r\n                                icon='user'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Gallon Remain'\r\n                                icon='flask'\r\n                                label={{\r\n                                    basic: true,\r\n                                    color: 'blue',\r\n                                    content: '50',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n            </List.Item>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default MemberRow;\r\n",["244","245"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx",["246","247","248","249","250","251","252","253","254","255","256"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { TransitionablePortal, Segment, Button, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport MemberRow from '../MemberRow';\r\nimport BuyForm from '../BuyForm';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const { phone, account, firstName, lastName, history } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    // const [animation, setAnimation] = useState('fade');\r\n    const [duration, setDuration] = useState(800);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('FindContainer', { props });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onStart={() => console.log('onStart', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {/* <MemberRow /> */}\r\n                            <Segment inverted raised color='blue'>\r\n                                <BuyForm />\r\n                                <MemberRow />\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('membership')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }) => {\r\n            console.log('FindForm was submitted', {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx",[],["257","258"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx",["259"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    TransitionablePortal,\r\n    Segment,\r\n    Grid,\r\n    // Message,\r\n    Table,\r\n    Pagination,\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../types';\r\nimport { channels } from '../../../shared/constants';\r\n\r\nconst { ipcRenderer } = window;\r\n\r\nconst PortalMembership = (props) => {\r\n    const { membership, clearMembership, members, getAccount } = props;\r\n    const [open, setOpenPortal] = useState(true);\r\n    const [offset, setOffset] = useState(0);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [account, setAccount] = useState(null);\r\n\r\n    const onChange = (e, pageInfo) => {\r\n        setActivePage(pageInfo.activePage);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setAccount(\r\n            members\r\n                ? members.slice((activePage - 1) * 10, activePage * 10)\r\n                : null\r\n        );\r\n    }, [setOffset, setAccount, activePage, offset, members]);\r\n\r\n    const handleClose = () => {\r\n        setOpenPortal(false);\r\n        clearMembership();\r\n        props.history.push('/find');\r\n    };\r\n\r\n    const Row = ({ account, firstName, lastName, fullname, phone }) => (\r\n        <Table.Row\r\n            // onClick={() => props.history.push('/account')}\r\n            onClick={() => {\r\n                getAccount(account, () => {\r\n                    // We will also grab invoice too\r\n                    // getAccountInvoices(account, () =>\r\n                    //     props.history.push('/account')\r\n                    // );\r\n                    props.history.push('/account');\r\n                });\r\n            }}\r\n            style={{ cursor: 'pointer' }}>\r\n            <Table.Cell content={account} />\r\n            <Table.Cell content={firstName} />\r\n            <Table.Cell content={lastName} />\r\n            <Table.Cell content={fullname} />\r\n            <Table.Cell content={phone} />\r\n        </Table.Row>\r\n    );\r\n\r\n    const renderRows = () =>\r\n        account\r\n            ? account.map((member, index) => <Row key={index} {...member} />)\r\n            : null;\r\n\r\n    return (\r\n        <TransitionablePortal onClose={handleClose} open={open}>\r\n            <Segment\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'fixed',\r\n                    bottom: '1%',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Column>\r\n                        <Table\r\n                            celled\r\n                            selectable\r\n                            color='blue'\r\n                            inverted\r\n                            className='MemberTable'\r\n                            size='large'>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell content='Account' />\r\n                                    <Table.HeaderCell content='First Name' />\r\n                                    <Table.HeaderCell content='Last Name' />\r\n                                    <Table.HeaderCell content='Full Name' />\r\n                                    <Table.HeaderCell content='Phone' />\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>{renderRows()}</Table.Body>\r\n                        </Table>\r\n                        <Pagination\r\n                            activePage={activePage}\r\n                            onPageChange={onChange}\r\n                            totalPages={\r\n                                members ? Math.ceil(members.length / 10) : 0\r\n                            }\r\n                        />\r\n                        {/* <Message>\r\n                            <Message.Content>\r\n                                <pre>{JSON.stringify(membership, null, 2)}</pre>\r\n                            </Message.Content>\r\n                        </Message> */}\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        membership: state.membership,\r\n        members: state.membership.members,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearMembership: () => dispatch({ type: actionTypes.CLEAR_MEMBERSHIP }),\r\n\r\n        getAccount: (account, callback) => {\r\n            ipcRenderer.send(channels.GET_ACCOUNT, { account });\r\n\r\n            ipcRenderer.on(channels.GET_ACCOUNT, (event, response) => {\r\n                ipcRenderer.removeAllListeners(channels.GET_ACCOUNT);\r\n                // console.log(response);\r\n                dispatch({ type: actionTypes.GET_ACCOUNT, payload: response });\r\n                callback();\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortalMembership);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx",["260","261"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddScreen.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddForm.jsx",["262","263","264","265","266","267","268"],"import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { Field } from 'redux-form';\r\nimport {\r\n    currentDate,\r\n    getCurrentTime,\r\n    normalizeAreaCode,\r\n    normalizeInput,\r\n} from '../../helpers/helpers';\r\n\r\nconst AddForm = (props) => {\r\n    const {\r\n        add,\r\n        find,\r\n        getAccount,\r\n        // getLastRecord,\r\n        account,\r\n        record,\r\n        firstName,\r\n        lastName,\r\n        addNewMembership,\r\n        history,\r\n    } = props;\r\n    const [currentGallon, setCurrentGallon] = useState(0);\r\n    const [buyGallon, setBuyGallon] = useState(0);\r\n    const [remain, setRemainGallon] = useState(0);\r\n    const [fee, setFee] = useState(0);\r\n    const [gallonAmount, setGallonAmount] = useState(0);\r\n    const [fullname, setFullName] = useState(null);\r\n    const [newMember, setNewMember] = useState(null);\r\n    const [added, setAdded] = useState(false);\r\n\r\n    const [errorAreaCodeMessage, setErrorAreaCodeMessage] = useState(null);\r\n    const [errorPhone, setErrorPhone] = useState(null);\r\n\r\n    const addNew = (e) => {\r\n        e.preventDefault();\r\n        setCurrentGallon(gallonAmount);\r\n        setRemainGallon(gallonAmount);\r\n        setAdded(true);\r\n        addNewMembership(\r\n            {\r\n                record_id: record + 1,\r\n                account: account + 1,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                fullname: fullname,\r\n                memberSince: add.memberSince,\r\n                phone: add.phone,\r\n                prevGallon: gallonAmount,\r\n                buyGallon: 0,\r\n                gallonLeft: gallonAmount,\r\n                overGallon: gallonAmount,\r\n                preOver: gallonAmount,\r\n                renew: parseInt(gallonAmount),\r\n                renewFee: parseInt(fee),\r\n                lastRenewGallon: parseInt(gallonAmount),\r\n                invoiceDate: currentDate(),\r\n                invoiceTime: getCurrentTime(),\r\n                areaCode: add.areaCode,\r\n                threeDigit: add.phone.slice(0, 3),\r\n                fourDigit: add.phone.slice(4, 8),\r\n            },\r\n            () => {\r\n                find({ account: account + 1 }, (data) => {\r\n                    getAccount(data.membership[0].account, () => {\r\n                        props.clearMembership();\r\n                        history.push('/account');\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log({ add });\r\n    }, [add]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.add);\r\n        const { firstName, lastName } = props.add;\r\n        if (firstName && lastName) {\r\n            setFullName(firstName + ' ' + lastName);\r\n        }\r\n    }, [props.add]);\r\n\r\n    useEffect(() => {\r\n        console.log({ newMember });\r\n    }, [newMember]);\r\n\r\n    return (\r\n        <Form size='large'>\r\n            <Form.Group>\r\n                <Field\r\n                    name='todayDate'\r\n                    className='TodayDate'\r\n                    inverted={true}\r\n                    icon='calendar'\r\n                    placeholder='mm/dd/yyyy'\r\n                    iconPosition='left'\r\n                    readOnly\r\n                    width={2}\r\n                    component={Form.Input}\r\n                    label='Today Date'\r\n                />\r\n                <Field\r\n                    name='todayTime'\r\n                    label='Current Time'\r\n                    component={Form.Input}\r\n                    className='TodayDate'\r\n                    inverted={true}\r\n                    placeholder='00:00:00 PM'\r\n                    icon='time'\r\n                    iconPosition='left'\r\n                    readOnly\r\n                    width={2}\r\n                />\r\n                <Form.Input type='hidden' width={8} />\r\n                <Field\r\n                    name='memberSince'\r\n                    label='Member Since'\r\n                    readOnly\r\n                    className='TodayDate'\r\n                    component={Form.Input}\r\n                    inverted={true}\r\n                    placeholder='mm/dd/yyy'\r\n                    icon='calendar'\r\n                    iconPosition='left'\r\n                    width={2}\r\n                />\r\n                <Field\r\n                    readOnly\r\n                    label='Account'\r\n                    name='account'\r\n                    className='BuyAccount'\r\n                    placeholder='xxxxxx'\r\n                    component={Form.Input}\r\n                    inverted={true}\r\n                    icon='hashtag'\r\n                    iconPosition='left'\r\n                    width={2}\r\n                />\r\n                <Field\r\n                    readOnly\r\n                    label='Invoice'\r\n                    name='record_id'\r\n                    component={Form.Input}\r\n                    className='TodayDate'\r\n                    placeholder='xxxxxxx'\r\n                    inverted={true}\r\n                    icon='hashtag'\r\n                    iconPosition='left'\r\n                    width={2}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Field\r\n                    disabled={added}\r\n                    readOnly={added}\r\n                    id='areaCode'\r\n                    className='AreaCode'\r\n                    inverted={true}\r\n                    name='areaCode'\r\n                    error={errorAreaCodeMessage}\r\n                    width={1}\r\n                    placeholder='xxx'\r\n                    component={Form.Input}\r\n                    label='Area Code'\r\n                    normalize={normalizeAreaCode}\r\n                />\r\n                <Field\r\n                    readOnly={added}\r\n                    error={errorPhone}\r\n                    id='phone'\r\n                    className='PhoneNumber'\r\n                    inverted={true}\r\n                    disabled={added}\r\n                    name='phone'\r\n                    placeholder='xxx-xxxx'\r\n                    width={2}\r\n                    component={Form.Input}\r\n                    label='Phone Number'\r\n                    normalize={normalizeInput}\r\n                />\r\n                <Field\r\n                    readOnly={added}\r\n                    disabled={added}\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    inverted={true}\r\n                    className='PhoneNumber'\r\n                    placeholder='Enter Name'\r\n                    width={2}\r\n                    component={Form.Input}\r\n                    label='First Name'\r\n                    normalize={(value) => {\r\n                        if (value.match(/^[a-zA-Z]+$/g))\r\n                            return value.toUpperCase();\r\n                    }}\r\n                />\r\n                <Field\r\n                    disabled={added}\r\n                    readOnly={added}\r\n                    name='lastName'\r\n                    label='Last Name'\r\n                    inverted={true}\r\n                    className='PhoneNumber'\r\n                    placeholder='Enter Name'\r\n                    width={2}\r\n                    component={Form.Input}\r\n                    normalize={(value) => {\r\n                        if (value.match(/^[a-zA-Z]+$/g))\r\n                            return value.toUpperCase();\r\n                    }}\r\n                />\r\n                <Form.Input type='hidden' width={5} />\r\n                <Form.Input\r\n                    readOnly={added}\r\n                    id='renew'\r\n                    label='Renew Fee'\r\n                    name='renewalFee'\r\n                    className='AreaCode'\r\n                    value={fee}\r\n                    onChange={(e, { value }) => {\r\n                        if (isNaN(parseInt(value))) {\r\n                            setFee(0);\r\n                        } else {\r\n                            setFee(parseInt(value));\r\n                        }\r\n                    }}\r\n                    inverted={true}\r\n                    width={1}\r\n                    disabled={added}\r\n                />\r\n                <Form.Input\r\n                    readOnly={added}\r\n                    label='Gallon'\r\n                    name='renewalAmount'\r\n                    className='AreaCode'\r\n                    value={gallonAmount}\r\n                    disabled={!fee || added}\r\n                    inverted={true}\r\n                    onChange={(e, { value }) => {\r\n                        if (isNaN(parseInt(value))) {\r\n                            setGallonAmount(0);\r\n                        } else {\r\n                            setGallonAmount(parseInt(value));\r\n                        }\r\n                    }}\r\n                    onKeyPress={(e) =>\r\n                        e.key === 'Enter' || e.keyCode === 13 ? addNew(e) : null\r\n                    }\r\n                    width={1}\r\n                />\r\n                <Form.Button\r\n                    content='Add Membership'\r\n                    style={{ marginTop: '30px' }}\r\n                    color='blue'\r\n                    size='large'\r\n                    disabled={\r\n                        !fee ||\r\n                        !gallonAmount ||\r\n                        !add.areaCode ||\r\n                        !add.phone ||\r\n                        !add.lastName ||\r\n                        !add.firstName ||\r\n                        add.phone.length < 8 ||\r\n                        add.areaCode.length < 3 ||\r\n                        added\r\n                    }\r\n                    onClick={(e) => {\r\n                        addNew(e);\r\n                    }}\r\n                />\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default AddForm;\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Phone.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Invoice.jsx",[],["269","270"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\InvoiceRow.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\InvoiceTable.jsx",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"271","replacedBy":"275"},{"ruleId":"273","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":6,"column":5,"nodeType":"279","messageId":"280","endLine":6,"endColumn":10},{"ruleId":"277","severity":1,"message":"281","line":7,"column":5,"nodeType":"279","messageId":"280","endLine":7,"endColumn":11},{"ruleId":"277","severity":1,"message":"282","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":10,"endColumn":12},{"ruleId":"277","severity":1,"message":"283","line":11,"column":5,"nodeType":"279","messageId":"280","endLine":11,"endColumn":14},{"ruleId":"277","severity":1,"message":"284","line":12,"column":5,"nodeType":"279","messageId":"280","endLine":12,"endColumn":9},{"ruleId":"277","severity":1,"message":"285","line":18,"column":8,"nodeType":"279","messageId":"280","endLine":18,"endColumn":22},{"ruleId":"277","severity":1,"message":"286","line":19,"column":8,"nodeType":"279","messageId":"280","endLine":19,"endColumn":16},{"ruleId":"277","severity":1,"message":"287","line":24,"column":21,"nodeType":"279","messageId":"280","endLine":24,"endColumn":36},{"ruleId":"277","severity":1,"message":"288","line":25,"column":9,"nodeType":"279","messageId":"280","endLine":25,"endColumn":14},{"ruleId":"277","severity":1,"message":"289","line":26,"column":9,"nodeType":"279","messageId":"280","endLine":26,"endColumn":19},{"ruleId":"277","severity":1,"message":"290","line":27,"column":9,"nodeType":"279","messageId":"280","endLine":27,"endColumn":18},{"ruleId":"277","severity":1,"message":"291","line":28,"column":9,"nodeType":"279","messageId":"280","endLine":28,"endColumn":17},{"ruleId":"277","severity":1,"message":"292","line":29,"column":9,"nodeType":"279","messageId":"280","endLine":29,"endColumn":18},{"ruleId":"271","replacedBy":"293"},{"ruleId":"273","replacedBy":"294"},{"ruleId":"271","replacedBy":"295"},{"ruleId":"273","replacedBy":"296"},{"ruleId":"277","severity":1,"message":"278","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":10,"endColumn":10},{"ruleId":"277","severity":1,"message":"297","line":45,"column":12,"nodeType":"279","messageId":"280","endLine":45,"endColumn":22},{"ruleId":"277","severity":1,"message":"298","line":45,"column":24,"nodeType":"279","messageId":"280","endLine":45,"endColumn":37},{"ruleId":"277","severity":1,"message":"299","line":18,"column":9,"nodeType":"279","messageId":"280","endLine":18,"endColumn":16},{"ruleId":"277","severity":1,"message":"300","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":16},{"ruleId":"277","severity":1,"message":"301","line":6,"column":12,"nodeType":"279","messageId":"280","endLine":6,"endColumn":16},{"ruleId":"271","replacedBy":"302"},{"ruleId":"273","replacedBy":"303"},{"ruleId":"277","severity":1,"message":"281","line":3,"column":41,"nodeType":"279","messageId":"280","endLine":3,"endColumn":47},{"ruleId":"277","severity":1,"message":"304","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":16},{"ruleId":"277","severity":1,"message":"305","line":14,"column":12,"nodeType":"279","messageId":"280","endLine":14,"endColumn":24},{"ruleId":"277","severity":1,"message":"306","line":14,"column":26,"nodeType":"279","messageId":"280","endLine":14,"endColumn":41},{"ruleId":"277","severity":1,"message":"307","line":15,"column":12,"nodeType":"279","messageId":"280","endLine":15,"endColumn":21},{"ruleId":"277","severity":1,"message":"308","line":15,"column":23,"nodeType":"279","messageId":"280","endLine":15,"endColumn":35},{"ruleId":"277","severity":1,"message":"309","line":16,"column":18,"nodeType":"279","messageId":"280","endLine":16,"endColumn":25},{"ruleId":"277","severity":1,"message":"310","line":17,"column":23,"nodeType":"279","messageId":"280","endLine":17,"endColumn":35},{"ruleId":"277","severity":1,"message":"311","line":20,"column":21,"nodeType":"279","messageId":"280","endLine":20,"endColumn":31},{"ruleId":"277","severity":1,"message":"312","line":21,"column":12,"nodeType":"279","messageId":"280","endLine":21,"endColumn":28},{"ruleId":"277","severity":1,"message":"313","line":21,"column":30,"nodeType":"279","messageId":"280","endLine":21,"endColumn":49},{"ruleId":"271","replacedBy":"314"},{"ruleId":"273","replacedBy":"315"},{"ruleId":"277","severity":1,"message":"289","line":17,"column":13,"nodeType":"279","messageId":"280","endLine":17,"endColumn":23},{"ruleId":"277","severity":1,"message":"316","line":57,"column":12,"nodeType":"279","messageId":"280","endLine":57,"endColumn":16},{"ruleId":"277","severity":1,"message":"317","line":57,"column":18,"nodeType":"279","messageId":"280","endLine":57,"endColumn":25},{"ruleId":"277","severity":1,"message":"318","line":24,"column":12,"nodeType":"279","messageId":"280","endLine":24,"endColumn":25},{"ruleId":"277","severity":1,"message":"319","line":25,"column":12,"nodeType":"279","messageId":"280","endLine":25,"endColumn":21},{"ruleId":"277","severity":1,"message":"320","line":25,"column":23,"nodeType":"279","messageId":"280","endLine":25,"endColumn":35},{"ruleId":"277","severity":1,"message":"321","line":26,"column":12,"nodeType":"279","messageId":"280","endLine":26,"endColumn":18},{"ruleId":"277","severity":1,"message":"322","line":30,"column":23,"nodeType":"279","messageId":"280","endLine":30,"endColumn":35},{"ruleId":"277","severity":1,"message":"323","line":33,"column":34,"nodeType":"279","messageId":"280","endLine":33,"endColumn":57},{"ruleId":"277","severity":1,"message":"324","line":34,"column":24,"nodeType":"279","messageId":"280","endLine":34,"endColumn":37},{"ruleId":"271","replacedBy":"325"},{"ruleId":"273","replacedBy":"326"},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],["327"],["328"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'Step' is defined but never used.","'BuyModalButton' is defined but never used.","'Proptype' is defined but never used.","'submitSucceeded' is assigned a value but never used.","'phone' is assigned a value but never used.","'membership' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'clearForm' is assigned a value but never used.",["327"],["328"],["327"],["328"],"'reportDate' is assigned a value but never used.","'setReportDate' is assigned a value but never used.","'history' is assigned a value but never used.","'BuyModal' is defined but never used.","'open' is assigned a value but never used.",["327"],["328"],"'FindGrid' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'iconColor' is assigned a value but never used.","'setIconColor' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","'setCloseMe' is assigned a value but never used.","'hideLogoutButton' is assigned a value but never used.","'setHideLogoutButton' is assigned a value but never used.",["327"],["328"],"'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'currentGallon' is assigned a value but never used.","'buyGallon' is assigned a value but never used.","'setBuyGallon' is assigned a value but never used.","'remain' is assigned a value but never used.","'setNewMember' is assigned a value but never used.","'setErrorAreaCodeMessage' is assigned a value but never used.","'setErrorPhone' is assigned a value but never used.",["327"],["328"],"no-global-assign","no-unsafe-negation"]