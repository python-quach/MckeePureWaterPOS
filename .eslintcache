[{"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js":"1","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx":"2","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx":"3","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx":"4","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js":"5","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx":"6","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx":"7","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx":"8","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx":"9","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js":"10","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx":"11","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx":"12","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx":"13","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx":"14","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx":"15","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx":"16","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx":"17","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx":"18","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx":"19","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx":"20","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx":"21","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx":"22","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js":"23","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx":"24","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx":"25","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx":"26","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx":"27","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx":"28","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx":"29","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js":"30","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx":"31","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx":"32","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx":"33","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx":"34","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx":"35","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx":"36"},{"size":153,"mtime":1606626509269,"results":"37","hashOfConfig":"38"},{"size":476,"mtime":1606623088205,"results":"39","hashOfConfig":"38"},{"size":4959,"mtime":1607112330760,"results":"40","hashOfConfig":"38"},{"size":473,"mtime":1606623429061,"results":"41","hashOfConfig":"38"},{"size":369,"mtime":1606947794475,"results":"42","hashOfConfig":"38"},{"size":1754,"mtime":1607012898410,"results":"43","hashOfConfig":"38"},{"size":1218,"mtime":1607105274826,"results":"44","hashOfConfig":"38"},{"size":1943,"mtime":1606706941401,"results":"45","hashOfConfig":"38"},{"size":5134,"mtime":1606691876711,"results":"46","hashOfConfig":"38"},{"size":325,"mtime":1606257461394,"results":"47","hashOfConfig":"38"},{"size":376,"mtime":1606613325284,"results":"48","hashOfConfig":"38"},{"size":21036,"mtime":1606276172610,"results":"49","hashOfConfig":"38"},{"size":765,"mtime":1607113254135,"results":"50","hashOfConfig":"38"},{"size":6730,"mtime":1607113306760,"results":"51","hashOfConfig":"38"},{"size":1478,"mtime":1606971209791,"results":"52","hashOfConfig":"38"},{"size":1962,"mtime":1606691437861,"results":"53","hashOfConfig":"38"},{"size":2487,"mtime":1607112897614,"results":"54","hashOfConfig":"38"},{"size":1018,"mtime":1606762734515,"results":"55","hashOfConfig":"38"},{"size":3811,"mtime":1607018214562,"results":"56","hashOfConfig":"38"},{"size":2184,"mtime":1606867602502,"results":"57","hashOfConfig":"38"},{"size":4531,"mtime":1607018170537,"results":"58","hashOfConfig":"38"},{"size":852,"mtime":1606865435925,"results":"59","hashOfConfig":"38"},{"size":152,"mtime":1606970082160,"results":"60","hashOfConfig":"38"},{"size":230,"mtime":1606867679787,"results":"61","hashOfConfig":"38"},{"size":430,"mtime":1606867536055,"results":"62","hashOfConfig":"38"},{"size":1161,"mtime":1606870343500,"results":"63","hashOfConfig":"38"},{"size":2071,"mtime":1606930838671,"results":"64","hashOfConfig":"38"},{"size":4413,"mtime":1606880872215,"results":"65","hashOfConfig":"38"},{"size":323,"mtime":1606884213970,"results":"66","hashOfConfig":"38"},{"size":1164,"mtime":1607048574031,"results":"67","hashOfConfig":"38"},{"size":1342,"mtime":1606613325883,"results":"68","hashOfConfig":"38"},{"size":1751,"mtime":1606971173610,"results":"69","hashOfConfig":"38"},{"size":2622,"mtime":1607112923440,"results":"70","hashOfConfig":"38"},{"size":915,"mtime":1606434072191,"results":"71","hashOfConfig":"38"},{"size":8740,"mtime":1607104675007,"results":"72","hashOfConfig":"38"},{"size":2194,"mtime":1607112541834,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1keiamg",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js",[],["154","155"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx",["156"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { Header, Icon, Divider } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport LoginDebug from './LoginDebug';\r\nimport LoginForm from './LoginForm';\r\nimport LoginGrid from '../Grid/Grid';\r\nimport * as actionTypes from '../../../types';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction LoginContainer(props) {\r\n    const {\r\n        submitSucceeded,\r\n        username,\r\n        password,\r\n        clearForm,\r\n        history,\r\n        login,\r\n        focusInput,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n\r\n    useEffect(() => {\r\n        errorMessage ? setIconColor('whiteIcon') : setIconColor('blueIcon');\r\n    }, [errorMessage]);\r\n\r\n    useEffect(() => {\r\n        if (!username && !password && !submitSucceeded)\r\n            console.log('Login Form:', { username, password, submitSucceeded });\r\n    }, [submitSucceeded, username, password, clearForm, history, login]);\r\n\r\n    useEffect(() => {\r\n        const showInvalidButton = (error) => {\r\n            setErrorMessage(error);\r\n            clearForm();\r\n        };\r\n\r\n        const redirectUserToFindPage = (data) => {\r\n            history.push('/find');\r\n            console.log(`redirected to  ${history.location.pathname}`, data);\r\n        };\r\n\r\n        if (submitSucceeded) {\r\n            login(username, password, (error, data) => {\r\n                error ? showInvalidButton(error) : redirectUserToFindPage(data);\r\n            });\r\n        }\r\n    }, [login, submitSucceeded, password, username, clearForm, history]);\r\n\r\n    const clearInvalidLoginButton = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoginGrid>\r\n            <Header as='h1' inverted size='huge' textAlign='left'>\r\n                <Icon name='braille' color='blue' />\r\n                <Header.Content>\r\n                    Mckee Pure Water\r\n                    <Header.Subheader>Version 1.0</Header.Subheader>\r\n                </Header.Content>\r\n            </Header>\r\n            <Divider />\r\n            <Divider hidden />\r\n            <LoginForm\r\n                size='large'\r\n                handleSubmit={handleSubmit((value) => {})}\r\n                iconColor={iconColor}\r\n                clearInvalidLoginButton={clearInvalidLoginButton}\r\n                errorMessage={errorMessage}\r\n                username={username}\r\n                password={password}\r\n                focusInput={focusInput}\r\n                submitSucceeded={submitSucceeded}\r\n            />\r\n            {/* <LoginDebug\r\n                username={username}\r\n                password={password}\r\n                errorMessage={errorMessage}\r\n                submitSucceeded={submitSucceeded}\r\n            /> */}\r\n        </LoginGrid>\r\n    );\r\n}\r\n\r\nLoginContainer.defaultProps = {\r\n    gridProps: {\r\n        textAlign: 'center',\r\n        style: { height: '100vh' },\r\n        verticalAlign: 'middle',\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('user');\r\n    return {\r\n        username: selectFormData(state, 'username') || '',\r\n        password: selectFormData(state, 'password') || '',\r\n        submitSucceeded: selectFormData(state, 'submitSucceeded'),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('user')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        login: (username, password, callback) => {\r\n            console.log('LoginForm was submitted', { username, password });\r\n            ipcRenderer.send(channels.LOGIN_USER, { username, password });\r\n\r\n            ipcRenderer.on(\r\n                channels.LOGIN_USER,\r\n                (event, { error, user_id, username }) => {\r\n                    ipcRenderer.removeAllListeners(channels.LOGIN_USER);\r\n\r\n                    if (error) {\r\n                        console.log('response from server', { error });\r\n                        callback(error, null);\r\n                    } else {\r\n                        console.log('response from server:', {\r\n                            user_id,\r\n                            username,\r\n                        });\r\n                        dispatch({\r\n                            type: actionTypes.AUTHENTICATED,\r\n                            payload: user_id,\r\n                        });\r\n                        callback(error, { user_id, username });\r\n                    }\r\n                }\r\n            );\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxLoginForm = reduxForm({ form: 'user' })(LoginContainer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxLoginForm);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx",[],["157","158"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx",["159"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx",["160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    Form,\r\n    Grid,\r\n    Input,\r\n    Button,\r\n    Message,\r\n    Icon,\r\n    Divider,\r\n    Container,\r\n    Step,\r\n} from 'semantic-ui-react';\r\nimport { reset } from 'redux-form';\r\nimport { formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport MemberModalButton from './FindMemberModal';\r\nimport BuyModalButton from './BuyModal';\r\nimport Proptype from 'prop-types';\r\n\r\nconst FindForm = (props) => {\r\n    const {\r\n        handleSubmit,\r\n        findForm: { submitSucceeded },\r\n        phone,\r\n        membership,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        phoneProps,\r\n        history,\r\n    } = props;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const loginUser = (values) => {\r\n        console.log('LoginForm was submitted', { values });\r\n    };\r\n\r\n    const clearErrorMessage = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            textAlign='center'\r\n            style={{ height: '100vh' }}\r\n            verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Form onSubmit={handleSubmit(loginUser)} size='large'>\r\n                    <Field {...phoneProps} onFocus={clearErrorMessage} />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='membership'\r\n                        placeholder='xxxxxxx'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='address card'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='firstName'\r\n                        placeholder='First Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='lastName'\r\n                        placeholder='Last Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <MemberModalButton />\r\n                    <Form.Button\r\n                        circular\r\n                        fluid\r\n                        size='massive'\r\n                        color='blue'\r\n                        content='Logout'\r\n                        icon='sign-out'\r\n                        labelPosition='right'\r\n                        onClick={(event, data) => {\r\n                            event.preventDefault();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Form>\r\n                {errorMessage ? (\r\n                    <Message icon color='pink'>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Header>{errorMessage}</Message.Header>\r\n                    </Message>\r\n                ) : null}\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFindForm.defaultProps = {\r\n    phoneProps: {\r\n        className: 'findPhoneField',\r\n        component: Form.Input,\r\n        name: 'phone',\r\n        type: 'tel',\r\n        placeholder: '(408)-123-4567',\r\n        focus: true,\r\n        size: 'massive',\r\n        fluid: true,\r\n        icon: 'phone',\r\n        iconPosition: 'left',\r\n        transparent: true,\r\n        inverted: true,\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('find');\r\n    return {\r\n        phone: selectFormData(state, 'phone'),\r\n        membership: selectFormData(state, 'membership'),\r\n        firstName: selectFormData(state, 'firstName'),\r\n        lastName: selectFormData(state, 'lastName'),\r\n        findForm: state.form.find\r\n            ? {\r\n                  values: state.form.find.values,\r\n                  submitSucceeded: state.form.find.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('find')),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(reduxForm({ form: 'find' })(FindForm));\r\n",["173","174"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx",["175","176","177"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx",["178","179"],"import React, { useState } from 'react';\r\nimport { Divider, Form } from 'semantic-ui-react';\r\nimport Field from './FindField';\r\nimport FindModalButton from './FindModal';\r\n\r\nfunction FindForm({\r\n    setOpenFind,\r\n    clearForm,\r\n    hideLogoutButton,\r\n    handleSubmit,\r\n    size,\r\n    clearFields,\r\n    closeMe,\r\n    disableFindButton,\r\n    history,\r\n    find,\r\n    membership,\r\n}) {\r\n    const [hideField, setHideField] = useState(false);\r\n\r\n    return (\r\n        <Form\r\n            size={size}\r\n            onSubmit={handleSubmit((values) => {\r\n                find(values, (data) => {\r\n                    if (!data.error) {\r\n                        // setOpenPortal(true);\r\n                        // setHideField(true);\r\n                        // history.push('/portal');\r\n                        history.push('/member');\r\n                    }\r\n                    // console.log({ data });\r\n                });\r\n            })}>\r\n            <Field.Phone\r\n                hide={hideField}\r\n                clearFields={() => {\r\n                    clearFields(\r\n                        true,\r\n                        false,\r\n                        'account',\r\n                        'firstName',\r\n                        'lastName'\r\n                    );\r\n                }}\r\n            />\r\n            <Field.Account\r\n                hide={hideField}\r\n                clearFields={() => {\r\n                    clearFields(true, false, 'firstName', 'lastName', 'phone');\r\n                }}\r\n            />\r\n            <Field.Name\r\n                id='firstName'\r\n                name='firstName'\r\n                placeholder='first name'\r\n                hide={hideField}\r\n                clearFields={() => {\r\n                    clearFields(true, false, 'account', 'phone');\r\n                }}\r\n            />\r\n            <Field.Name\r\n                id='lastName'\r\n                name='lastName'\r\n                placeholder='last name'\r\n                hide={hideField}\r\n                clearField={() => {\r\n                    clearFields(true, false, 'account', 'phone');\r\n                }}\r\n            />\r\n            <Divider hidden />\r\n            <Form.Button\r\n                color='blue'\r\n                size='massive'\r\n                circular\r\n                content='Find Membership'\r\n                icon='search'\r\n                fluid\r\n                labelPosition='right'\r\n            />\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FindForm;\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx",["180"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx",["181","182"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx",["183"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx",["184","185","186","187","188","189","190","191","192","193","194"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { TransitionablePortal, Segment, Button, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport MemberRow from '../MemberRow';\r\nimport BuyForm from '../BuyForm';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const { phone, account, firstName, lastName, history } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    // const [animation, setAnimation] = useState('fade');\r\n    const [duration, setDuration] = useState(800);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('FindContainer', { props });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onStart={() => console.log('onStart', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {/* <MemberRow /> */}\r\n                            <Segment inverted raised color='blue'>\r\n                                <BuyForm />\r\n                                <MemberRow />\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('membership')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }) => {\r\n            console.log('FindForm was submitted', {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx",["195","196","197","198","199"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx",["200"],"import React, { useState } from 'react';\r\nimport {\r\n    TransitionablePortal,\r\n    Segment,\r\n    Grid,\r\n    Message,\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../types';\r\nimport MembershipRow from '../MemberRow';\r\n\r\nconst PortalMembership = (props) => {\r\n    const { membership, clearMembership } = props;\r\n    const [open, setOpenPortal] = useState(true);\r\n    const [hideField, setHideField] = useState(false);\r\n    const [hide, setHide] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpenPortal(false);\r\n        clearMembership();\r\n        props.history.push('/find');\r\n    };\r\n    return (\r\n        <TransitionablePortal onClose={handleClose} open={open}>\r\n            <Segment\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'fixed',\r\n                    bottom: '1%',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Column>\r\n                        <MembershipRow\r\n                            hideField={setHideField}\r\n                            hideRow={setHide}\r\n                            hide={hide}\r\n                            close={handleClose}\r\n                            history={props.history}\r\n                        />\r\n                        <Message>\r\n                            <Message.Content>\r\n                                <pre>{JSON.stringify(membership, null, 2)}</pre>\r\n                            </Message.Content>\r\n                        </Message>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        membership: state.membership,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearMembership: () => dispatch({ type: actionTypes.CLEAR_MEMBERSHIP }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PortalMembership);\r\n",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":18},{"ruleId":"201","replacedBy":"209"},{"ruleId":"203","replacedBy":"210"},{"ruleId":"205","severity":1,"message":"211","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":23},{"ruleId":"205","severity":1,"message":"212","line":6,"column":5,"nodeType":"207","messageId":"208","endLine":6,"endColumn":10},{"ruleId":"205","severity":1,"message":"213","line":7,"column":5,"nodeType":"207","messageId":"208","endLine":7,"endColumn":11},{"ruleId":"205","severity":1,"message":"211","line":10,"column":5,"nodeType":"207","messageId":"208","endLine":10,"endColumn":12},{"ruleId":"205","severity":1,"message":"214","line":11,"column":5,"nodeType":"207","messageId":"208","endLine":11,"endColumn":14},{"ruleId":"205","severity":1,"message":"215","line":12,"column":5,"nodeType":"207","messageId":"208","endLine":12,"endColumn":9},{"ruleId":"205","severity":1,"message":"216","line":18,"column":8,"nodeType":"207","messageId":"208","endLine":18,"endColumn":22},{"ruleId":"205","severity":1,"message":"217","line":19,"column":8,"nodeType":"207","messageId":"208","endLine":19,"endColumn":16},{"ruleId":"205","severity":1,"message":"218","line":24,"column":21,"nodeType":"207","messageId":"208","endLine":24,"endColumn":36},{"ruleId":"205","severity":1,"message":"219","line":25,"column":9,"nodeType":"207","messageId":"208","endLine":25,"endColumn":14},{"ruleId":"205","severity":1,"message":"220","line":26,"column":9,"nodeType":"207","messageId":"208","endLine":26,"endColumn":19},{"ruleId":"205","severity":1,"message":"221","line":27,"column":9,"nodeType":"207","messageId":"208","endLine":27,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":28,"column":9,"nodeType":"207","messageId":"208","endLine":28,"endColumn":17},{"ruleId":"205","severity":1,"message":"223","line":29,"column":9,"nodeType":"207","messageId":"208","endLine":29,"endColumn":18},{"ruleId":"201","replacedBy":"224"},{"ruleId":"203","replacedBy":"225"},{"ruleId":"205","severity":1,"message":"226","line":31,"column":26,"nodeType":"207","messageId":"208","endLine":31,"endColumn":41},{"ruleId":"205","severity":1,"message":"227","line":32,"column":23,"nodeType":"207","messageId":"208","endLine":32,"endColumn":35},{"ruleId":"205","severity":1,"message":"228","line":34,"column":23,"nodeType":"207","messageId":"208","endLine":34,"endColumn":35},{"ruleId":"205","severity":1,"message":"229","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":23},{"ruleId":"205","severity":1,"message":"230","line":19,"column":23,"nodeType":"207","messageId":"208","endLine":19,"endColumn":35},{"ruleId":"205","severity":1,"message":"231","line":18,"column":9,"nodeType":"207","messageId":"208","endLine":18,"endColumn":16},{"ruleId":"205","severity":1,"message":"232","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"233","line":6,"column":12,"nodeType":"207","messageId":"208","endLine":6,"endColumn":16},{"ruleId":"205","severity":1,"message":"234","line":65,"column":10,"nodeType":"207","messageId":"208","endLine":65,"endColumn":14},{"ruleId":"205","severity":1,"message":"213","line":3,"column":41,"nodeType":"207","messageId":"208","endLine":3,"endColumn":47},{"ruleId":"205","severity":1,"message":"235","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":16},{"ruleId":"205","severity":1,"message":"236","line":14,"column":12,"nodeType":"207","messageId":"208","endLine":14,"endColumn":24},{"ruleId":"205","severity":1,"message":"226","line":14,"column":26,"nodeType":"207","messageId":"208","endLine":14,"endColumn":41},{"ruleId":"205","severity":1,"message":"237","line":15,"column":12,"nodeType":"207","messageId":"208","endLine":15,"endColumn":21},{"ruleId":"205","severity":1,"message":"227","line":15,"column":23,"nodeType":"207","messageId":"208","endLine":15,"endColumn":35},{"ruleId":"205","severity":1,"message":"238","line":16,"column":18,"nodeType":"207","messageId":"208","endLine":16,"endColumn":25},{"ruleId":"205","severity":1,"message":"228","line":17,"column":23,"nodeType":"207","messageId":"208","endLine":17,"endColumn":35},{"ruleId":"205","severity":1,"message":"239","line":20,"column":21,"nodeType":"207","messageId":"208","endLine":20,"endColumn":31},{"ruleId":"205","severity":1,"message":"240","line":21,"column":12,"nodeType":"207","messageId":"208","endLine":21,"endColumn":28},{"ruleId":"205","severity":1,"message":"241","line":21,"column":30,"nodeType":"207","messageId":"208","endLine":21,"endColumn":49},{"ruleId":"205","severity":1,"message":"242","line":8,"column":25,"nodeType":"207","messageId":"208","endLine":8,"endColumn":40},{"ruleId":"205","severity":1,"message":"243","line":10,"column":12,"nodeType":"207","messageId":"208","endLine":10,"endColumn":21},{"ruleId":"205","severity":1,"message":"230","line":10,"column":23,"nodeType":"207","messageId":"208","endLine":10,"endColumn":35},{"ruleId":"205","severity":1,"message":"244","line":11,"column":12,"nodeType":"207","messageId":"208","endLine":11,"endColumn":16},{"ruleId":"205","severity":1,"message":"245","line":11,"column":18,"nodeType":"207","messageId":"208","endLine":11,"endColumn":25},{"ruleId":"205","severity":1,"message":"243","line":15,"column":12,"nodeType":"207","messageId":"208","endLine":15,"endColumn":21},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'LoginDebug' is defined but never used.","Identifier","unusedVar",["246"],["247"],"'Divider' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Step' is defined but never used.","'BuyModalButton' is defined but never used.","'Proptype' is defined but never used.","'submitSucceeded' is assigned a value but never used.","'phone' is assigned a value but never used.","'membership' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'clearForm' is assigned a value but never used.",["246"],["247"],"'setErrorMessage' is assigned a value but never used.","'setIconColor' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","'FindModalButton' is defined but never used.","'setHideField' is assigned a value but never used.","'history' is assigned a value but never used.","'BuyModal' is defined but never used.","'open' is assigned a value but never used.","'name' is defined but never used.","'FindGrid' is defined but never used.","'errorMessage' is assigned a value but never used.","'iconColor' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setCloseMe' is assigned a value but never used.","'hideLogoutButton' is assigned a value but never used.","'setHideLogoutButton' is assigned a value but never used.","'clearMembership' is assigned a value but never used.","'hideField' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]