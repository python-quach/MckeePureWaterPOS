[{"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js":"1","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx":"2","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx":"3","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx":"4","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js":"5","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx":"6","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx":"7","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx":"8","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx":"9","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js":"10","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx":"11","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx":"12","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx":"13","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx":"14","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx":"15","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx":"16","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx":"17","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx":"18","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx":"19","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx":"20","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx":"21","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx":"22","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js":"23","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx":"24","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx":"25","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx":"26","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx":"27","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx":"28","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx":"29","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js":"30","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx":"31","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx":"32","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx":"33","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx":"34","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx":"35","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx":"36","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx":"37","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx":"38","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js":"39","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx":"40","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx":"41","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js":"42","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx":"43","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx":"44"},{"size":475,"mtime":1608247665558,"results":"45","hashOfConfig":"46"},{"size":476,"mtime":1606623088205,"results":"47","hashOfConfig":"48"},{"size":4995,"mtime":1608049589805,"results":"49","hashOfConfig":"46"},{"size":473,"mtime":1606623429061,"results":"50","hashOfConfig":"46"},{"size":681,"mtime":1608584517617,"results":"51","hashOfConfig":"46"},{"size":1754,"mtime":1607012898410,"results":"52","hashOfConfig":"48"},{"size":1209,"mtime":1608049580128,"results":"53","hashOfConfig":"46"},{"size":1943,"mtime":1606706941401,"results":"54","hashOfConfig":"46"},{"size":5134,"mtime":1606691876711,"results":"55","hashOfConfig":"48"},{"size":325,"mtime":1606257461394,"results":"56","hashOfConfig":"46"},{"size":376,"mtime":1606613325284,"results":"57","hashOfConfig":"46"},{"size":21036,"mtime":1606276172610,"results":"58","hashOfConfig":"48"},{"size":769,"mtime":1608572150368,"results":"59","hashOfConfig":"46"},{"size":8353,"mtime":1608688773702,"results":"60","hashOfConfig":"46"},{"size":1478,"mtime":1606971209791,"results":"61","hashOfConfig":"46"},{"size":1962,"mtime":1606691437861,"results":"62","hashOfConfig":"48"},{"size":3889,"mtime":1608053087236,"results":"63","hashOfConfig":"46"},{"size":1018,"mtime":1606762734515,"results":"64","hashOfConfig":"46"},{"size":3811,"mtime":1607018214562,"results":"65","hashOfConfig":"48"},{"size":2184,"mtime":1606867602502,"results":"66","hashOfConfig":"48"},{"size":4531,"mtime":1607018170537,"results":"67","hashOfConfig":"48"},{"size":852,"mtime":1606865435925,"results":"68","hashOfConfig":"48"},{"size":442,"mtime":1608078178911,"results":"69","hashOfConfig":"46"},{"size":230,"mtime":1606867679787,"results":"70","hashOfConfig":"48"},{"size":430,"mtime":1606867536055,"results":"71","hashOfConfig":"48"},{"size":1319,"mtime":1607123383982,"results":"72","hashOfConfig":"46"},{"size":2404,"mtime":1608049615617,"results":"73","hashOfConfig":"46"},{"size":4413,"mtime":1606880872215,"results":"74","hashOfConfig":"48"},{"size":323,"mtime":1606884213970,"results":"75","hashOfConfig":"46"},{"size":2324,"mtime":1607558122500,"results":"76","hashOfConfig":"46"},{"size":1342,"mtime":1606613325883,"results":"77","hashOfConfig":"46"},{"size":2201,"mtime":1608075815566,"results":"78","hashOfConfig":"46"},{"size":2666,"mtime":1608049115190,"results":"79","hashOfConfig":"46"},{"size":915,"mtime":1606434072191,"results":"80","hashOfConfig":"46"},{"size":8740,"mtime":1607559969261,"results":"81","hashOfConfig":"46"},{"size":5065,"mtime":1607619561712,"results":"82","hashOfConfig":"46"},{"size":1984,"mtime":1607115051919,"results":"83","hashOfConfig":"46"},{"size":33573,"mtime":1608416204013,"results":"84","hashOfConfig":"46"},{"size":501,"mtime":1608074670219,"results":"85","hashOfConfig":"46"},{"size":12413,"mtime":1608702427169,"results":"86","hashOfConfig":"46"},{"size":6179,"mtime":1608689206518,"results":"87","hashOfConfig":"46"},{"size":2174,"mtime":1608585359808,"results":"88","hashOfConfig":"46"},{"size":5908,"mtime":1608702042013,"results":"89","hashOfConfig":"46"},{"size":4516,"mtime":1608700460179,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"6chska",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1keiamg",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js",[],["188","189"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx",[],["190","191"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx",["192","193","194","195","196","197","198","199","200","201","202","203","204"],"import React, { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    Form,\r\n    Grid,\r\n    Input,\r\n    Button,\r\n    Message,\r\n    Icon,\r\n    Divider,\r\n    Container,\r\n    Step,\r\n} from 'semantic-ui-react';\r\nimport { reset } from 'redux-form';\r\nimport { formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport MemberModalButton from './FindMemberModal';\r\nimport BuyModalButton from './BuyModal';\r\nimport Proptype from 'prop-types';\r\n\r\nconst FindForm = (props) => {\r\n    const {\r\n        handleSubmit,\r\n        findForm: { submitSucceeded },\r\n        phone,\r\n        membership,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        phoneProps,\r\n        history,\r\n    } = props;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const loginUser = (values) => {\r\n        console.log('LoginForm was submitted', { values });\r\n    };\r\n\r\n    const clearErrorMessage = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            textAlign='center'\r\n            style={{ height: '100vh' }}\r\n            verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Form onSubmit={handleSubmit(loginUser)} size='large'>\r\n                    <Field {...phoneProps} onFocus={clearErrorMessage} />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='membership'\r\n                        placeholder='xxxxxxx'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='address card'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='firstName'\r\n                        placeholder='First Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='lastName'\r\n                        placeholder='Last Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <MemberModalButton />\r\n                    <Form.Button\r\n                        circular\r\n                        fluid\r\n                        size='massive'\r\n                        color='blue'\r\n                        content='Logout'\r\n                        icon='sign-out'\r\n                        labelPosition='right'\r\n                        onClick={(event, data) => {\r\n                            event.preventDefault();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Form>\r\n                {errorMessage ? (\r\n                    <Message icon color='pink'>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Header>{errorMessage}</Message.Header>\r\n                    </Message>\r\n                ) : null}\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFindForm.defaultProps = {\r\n    phoneProps: {\r\n        className: 'findPhoneField',\r\n        component: Form.Input,\r\n        name: 'phone',\r\n        type: 'tel',\r\n        placeholder: '(408)-123-4567',\r\n        focus: true,\r\n        size: 'massive',\r\n        fluid: true,\r\n        icon: 'phone',\r\n        iconPosition: 'left',\r\n        transparent: true,\r\n        inverted: true,\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('find');\r\n    return {\r\n        phone: selectFormData(state, 'phone'),\r\n        membership: selectFormData(state, 'membership'),\r\n        firstName: selectFormData(state, 'firstName'),\r\n        lastName: selectFormData(state, 'lastName'),\r\n        findForm: state.form.find\r\n            ? {\r\n                  values: state.form.find.values,\r\n                  submitSucceeded: state.form.find.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('find')),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(reduxForm({ form: 'find' })(FindForm));\r\n",["205","206"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx",["207"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport {\r\n    TransitionablePortal,\r\n    Segment,\r\n    Divider,\r\n    Header,\r\n    Icon,\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport FindForm from './FindForm';\r\nimport FindLogoutButton from './FindLogoutButton';\r\nimport DebugMessage from '../Debug/DebugMessage';\r\nimport * as actionTypes from '../../../types';\r\n\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const {\r\n        submitSucceeded,\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        history,\r\n        find,\r\n        focusInput,\r\n        handleSubmit,\r\n        clearFields,\r\n        membership,\r\n        clearMembership,\r\n        getAccount,\r\n    } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    const [duration, setDuration] = useState(500);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('FindContainer', { props });\r\n    // });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (membership.error) {\r\n            clearForm();\r\n        }\r\n    }, [clearForm, membership.error]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            // onStart={() => console.log('onStart', { open })}\r\n            // onOpen={() => console.log('onOPen', { open })}\r\n            onClose={() => console.log('onClose', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <FindGrid>\r\n                    <Header as='h1' inverted size='huge' textAlign='left'>\r\n                        <Icon name='braille' color='blue' />\r\n                        <Header.Content>\r\n                            Mckee Pure Water\r\n                            <Header.Subheader>Version 1.0</Header.Subheader>\r\n                        </Header.Content>\r\n                    </Header>\r\n                    <Divider />\r\n                    <FindForm\r\n                        getAccount={getAccount}\r\n                        setOpenFind={setOpen}\r\n                        clearMembership={clearMembership}\r\n                        membership={membership}\r\n                        find={find}\r\n                        history={history}\r\n                        disableFindButton={disableFindButton}\r\n                        clearFields={clearFields}\r\n                        hideLogoutButton={setHideLogoutButton}\r\n                        closeMe={setCloseMe}\r\n                        clearForm={clearForm}\r\n                        size='large'\r\n                        handleSubmit={handleSubmit}\r\n                        iconColor={iconColor}\r\n                        errorMessage={errorMessage}\r\n                        phone={phone}\r\n                        account={account}\r\n                        firstName={firstName}\r\n                        lastName={lastName}\r\n                        logout={() => history.push('/')}\r\n                        focusInput={focusInput}\r\n                        submitSucceeded={submitSucceeded}\r\n                        setOpen={setOpen}\r\n                        setErrorMessage={setErrorMessage}\r\n                        setIconColor={setIconColor}\r\n                        setAnimation={setAnimation}\r\n                    />\r\n                    <Divider hidden />\r\n                    <FindLogoutButton\r\n                        hide={hideLogoutButton}\r\n                        hideField={setHideLogoutButton}\r\n                        logout={() => {\r\n                            setOpen(false);\r\n                            clearMembership();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                    {/* <DebugMessage\r\n                        membership={membership}\r\n                        phone={phone}\r\n                        account={account}\r\n                        firstName={firstName}\r\n                        lastName={lastName}\r\n                        submitSucceeded={submitSucceeded}\r\n                    /> */}\r\n                </FindGrid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        membership: state.membership,\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAccount: (account, callback) => {\r\n            ipcRenderer.send(channels.GET_ACCOUNT, { account });\r\n\r\n            ipcRenderer.on(channels.GET_ACCOUNT, (event, response) => {\r\n                ipcRenderer.removeAllListeners(channels.GET_ACCOUNT);\r\n                // console.log(response);\r\n                dispatch({ type: actionTypes.GET_ACCOUNT, payload: response });\r\n                callback();\r\n            });\r\n        },\r\n        clearForm: () => dispatch(reset('membership')),\r\n        clearMembership: () => dispatch({ type: actionTypes.CLEAR_MEMBERSHIP }),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }, callback) => {\r\n            // console.log('FindForm was submitted', {\r\n            //     phone,\r\n            //     account,\r\n            //     firstName,\r\n            //     lastName,\r\n            // });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.on(channels.FIND_MEMBERSHIP, (event, response) => {\r\n                ipcRenderer.removeAllListeners(channels.FIND_MEMBERSHIP);\r\n                // console.log(response);\r\n                if (response.error) {\r\n                    dispatch({\r\n                        type: actionTypes.FIND_ERROR,\r\n                        payload: response,\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: actionTypes.FIND_MEMBERSHIP,\r\n                        payload: response,\r\n                    });\r\n                }\r\n\r\n                callback(response);\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx",["208"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx",["209","210"],"import React from 'react';\r\nimport { List, Button } from 'semantic-ui-react';\r\nimport BuyModal from './BuyModal';\r\n\r\nconst MemberRow = (props) => {\r\n    const [open, openBuyModal] = React.useState(false);\r\n    const { close } = props;\r\n\r\n    return (\r\n        <List verticalAlign='middle' size='large' inverted>\r\n            <List.Item>\r\n                <List.Content floated='right'>\r\n                    {/* <BuyModal\r\n                        setOpen={openBuyModal}\r\n                        open={open}\r\n                        closeOnDimmerClick={false}\r\n                        closeOnEscape={false}\r\n                        hideField={props.hideField}\r\n                        hideMemberRow={props.hideRow}\r\n                    /> */}\r\n\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='pink'\r\n                                content='Buy'\r\n                                labelPosition='right'\r\n                                icon='plus cart'\r\n                                onClick={() => {\r\n                                    openBuyModal(true);\r\n                                    props.hideRow(true);\r\n                                    props.history.push('/buy');\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='facebook'\r\n                                content='Renew'\r\n                                labelPosition='right'\r\n                                icon='redo'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='twitter'\r\n                                content='Edit'\r\n                                labelPosition='right'\r\n                                icon='edit'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Invoice'\r\n                                labelPosition='right'\r\n                                icon='sticky note'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='red'\r\n                                content='Done'\r\n                                labelPosition='right'\r\n                                icon='close'\r\n                                onClick={close}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n                <List.Content>\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='302039'\r\n                                icon='gg'\r\n                            />\r\n                            <Button\r\n                                inverted\r\n                                circular\r\n                                color='grey'\r\n                                size='large'\r\n                                content='Hung Quach'\r\n                                icon='user'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Gallon Remain'\r\n                                icon='flask'\r\n                                label={{\r\n                                    basic: true,\r\n                                    color: 'blue',\r\n                                    content: '50',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n            </List.Item>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default MemberRow;\r\n",["211","212"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx",["213","214","215","216","217","218","219","220","221","222","223"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { TransitionablePortal, Segment, Button, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport MemberRow from '../MemberRow';\r\nimport BuyForm from '../BuyForm';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const { phone, account, firstName, lastName, history } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    // const [animation, setAnimation] = useState('fade');\r\n    const [duration, setDuration] = useState(800);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('FindContainer', { props });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onStart={() => console.log('onStart', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {/* <MemberRow /> */}\r\n                            <Segment inverted raised color='blue'>\r\n                                <BuyForm />\r\n                                <MemberRow />\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('membership')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }) => {\r\n            console.log('FindForm was submitted', {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx",[],["224","225"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx",["226","227"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx",["228","229","230","231","232","233","234"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx",["235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"236","replacedBy":"240"},{"ruleId":"238","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":6,"column":5,"nodeType":"244","messageId":"245","endLine":6,"endColumn":10},{"ruleId":"242","severity":1,"message":"246","line":7,"column":5,"nodeType":"244","messageId":"245","endLine":7,"endColumn":11},{"ruleId":"242","severity":1,"message":"247","line":10,"column":5,"nodeType":"244","messageId":"245","endLine":10,"endColumn":12},{"ruleId":"242","severity":1,"message":"248","line":11,"column":5,"nodeType":"244","messageId":"245","endLine":11,"endColumn":14},{"ruleId":"242","severity":1,"message":"249","line":12,"column":5,"nodeType":"244","messageId":"245","endLine":12,"endColumn":9},{"ruleId":"242","severity":1,"message":"250","line":18,"column":8,"nodeType":"244","messageId":"245","endLine":18,"endColumn":22},{"ruleId":"242","severity":1,"message":"251","line":19,"column":8,"nodeType":"244","messageId":"245","endLine":19,"endColumn":16},{"ruleId":"242","severity":1,"message":"252","line":24,"column":21,"nodeType":"244","messageId":"245","endLine":24,"endColumn":36},{"ruleId":"242","severity":1,"message":"253","line":25,"column":9,"nodeType":"244","messageId":"245","endLine":25,"endColumn":14},{"ruleId":"242","severity":1,"message":"254","line":26,"column":9,"nodeType":"244","messageId":"245","endLine":26,"endColumn":19},{"ruleId":"242","severity":1,"message":"255","line":27,"column":9,"nodeType":"244","messageId":"245","endLine":27,"endColumn":18},{"ruleId":"242","severity":1,"message":"256","line":28,"column":9,"nodeType":"244","messageId":"245","endLine":28,"endColumn":17},{"ruleId":"242","severity":1,"message":"257","line":29,"column":9,"nodeType":"244","messageId":"245","endLine":29,"endColumn":18},{"ruleId":"236","replacedBy":"258"},{"ruleId":"238","replacedBy":"259"},{"ruleId":"242","severity":1,"message":"260","line":15,"column":8,"nodeType":"244","messageId":"245","endLine":15,"endColumn":20},{"ruleId":"242","severity":1,"message":"261","line":18,"column":9,"nodeType":"244","messageId":"245","endLine":18,"endColumn":16},{"ruleId":"242","severity":1,"message":"262","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":16},{"ruleId":"242","severity":1,"message":"263","line":6,"column":12,"nodeType":"244","messageId":"245","endLine":6,"endColumn":16},{"ruleId":"236","replacedBy":"264"},{"ruleId":"238","replacedBy":"265"},{"ruleId":"242","severity":1,"message":"246","line":3,"column":41,"nodeType":"244","messageId":"245","endLine":3,"endColumn":47},{"ruleId":"242","severity":1,"message":"266","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":16},{"ruleId":"242","severity":1,"message":"267","line":14,"column":12,"nodeType":"244","messageId":"245","endLine":14,"endColumn":24},{"ruleId":"242","severity":1,"message":"268","line":14,"column":26,"nodeType":"244","messageId":"245","endLine":14,"endColumn":41},{"ruleId":"242","severity":1,"message":"269","line":15,"column":12,"nodeType":"244","messageId":"245","endLine":15,"endColumn":21},{"ruleId":"242","severity":1,"message":"270","line":15,"column":23,"nodeType":"244","messageId":"245","endLine":15,"endColumn":35},{"ruleId":"242","severity":1,"message":"271","line":16,"column":18,"nodeType":"244","messageId":"245","endLine":16,"endColumn":25},{"ruleId":"242","severity":1,"message":"272","line":17,"column":23,"nodeType":"244","messageId":"245","endLine":17,"endColumn":35},{"ruleId":"242","severity":1,"message":"273","line":20,"column":21,"nodeType":"244","messageId":"245","endLine":20,"endColumn":31},{"ruleId":"242","severity":1,"message":"274","line":21,"column":12,"nodeType":"244","messageId":"245","endLine":21,"endColumn":28},{"ruleId":"242","severity":1,"message":"275","line":21,"column":30,"nodeType":"244","messageId":"245","endLine":21,"endColumn":49},{"ruleId":"236","replacedBy":"276"},{"ruleId":"238","replacedBy":"277"},{"ruleId":"242","severity":1,"message":"278","line":57,"column":12,"nodeType":"244","messageId":"245","endLine":57,"endColumn":16},{"ruleId":"242","severity":1,"message":"279","line":57,"column":18,"nodeType":"244","messageId":"245","endLine":57,"endColumn":25},{"ruleId":"242","severity":1,"message":"280","line":4,"column":5,"nodeType":"244","messageId":"245","endLine":4,"endColumn":12},{"ruleId":"242","severity":1,"message":"281","line":6,"column":5,"nodeType":"244","messageId":"245","endLine":6,"endColumn":10},{"ruleId":"242","severity":1,"message":"282","line":10,"column":5,"nodeType":"244","messageId":"245","endLine":10,"endColumn":10},{"ruleId":"242","severity":1,"message":"283","line":40,"column":12,"nodeType":"244","messageId":"245","endLine":40,"endColumn":23},{"ruleId":"242","severity":1,"message":"284","line":42,"column":12,"nodeType":"244","messageId":"245","endLine":42,"endColumn":22},{"ruleId":"242","severity":1,"message":"285","line":42,"column":24,"nodeType":"244","messageId":"245","endLine":42,"endColumn":37},{"ruleId":"242","severity":1,"message":"286","line":49,"column":12,"nodeType":"244","messageId":"245","endLine":49,"endColumn":20},{"ruleId":"242","severity":1,"message":"287","line":2,"column":24,"nodeType":"244","messageId":"245","endLine":2,"endColumn":31},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],["288"],["289"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'Step' is defined but never used.","'BuyModalButton' is defined but never used.","'Proptype' is defined but never used.","'submitSucceeded' is assigned a value but never used.","'phone' is assigned a value but never used.","'membership' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'clearForm' is assigned a value but never used.",["288"],["289"],"'DebugMessage' is defined but never used.","'history' is assigned a value but never used.","'BuyModal' is defined but never used.","'open' is assigned a value but never used.",["288"],["289"],"'FindGrid' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'iconColor' is assigned a value but never used.","'setIconColor' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","'setCloseMe' is assigned a value but never used.","'hideLogoutButton' is assigned a value but never used.","'setHideLogoutButton' is assigned a value but never used.",["288"],["289"],"'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'Message' is defined but never used.","'Label' is defined but never used.","'Table' is defined but never used.","'showReceipt' is assigned a value but never used.","'renewCheck' is assigned a value but never used.","'setRenewCheck' is assigned a value but never used.","'invoices' is assigned a value but never used.","'Segment' is defined but never used.","no-global-assign","no-unsafe-negation"]