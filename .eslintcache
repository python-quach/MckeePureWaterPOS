[{"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js":"1","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx":"2","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx":"3","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx":"4","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js":"5","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx":"6","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx":"7","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx":"8","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx":"9","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js":"10","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx":"11","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx":"12","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx":"13","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx":"14","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx":"15","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx":"16","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx":"17","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx":"18","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx":"19","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx":"20","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx":"21","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx":"22","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js":"23","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx":"24","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx":"25","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx":"26","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx":"27","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx":"28","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx":"29","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js":"30","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx":"31","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx":"32","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx":"33","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx":"34","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx":"35","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx":"36","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx":"37","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx":"38","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js":"39"},{"size":439,"mtime":1608164716320,"results":"40","hashOfConfig":"41"},{"size":476,"mtime":1606623088205,"results":"42","hashOfConfig":"43"},{"size":4995,"mtime":1608049589805,"results":"44","hashOfConfig":"41"},{"size":473,"mtime":1606623429061,"results":"45","hashOfConfig":"41"},{"size":415,"mtime":1607488121895,"results":"46","hashOfConfig":"41"},{"size":1754,"mtime":1607012898410,"results":"47","hashOfConfig":"43"},{"size":1209,"mtime":1608049580128,"results":"48","hashOfConfig":"41"},{"size":1943,"mtime":1606706941401,"results":"49","hashOfConfig":"41"},{"size":5134,"mtime":1606691876711,"results":"50","hashOfConfig":"43"},{"size":325,"mtime":1606257461394,"results":"51","hashOfConfig":"41"},{"size":376,"mtime":1606613325284,"results":"52","hashOfConfig":"41"},{"size":21036,"mtime":1606276172610,"results":"53","hashOfConfig":"43"},{"size":892,"mtime":1607380062011,"results":"54","hashOfConfig":"41"},{"size":8345,"mtime":1608052950484,"results":"55","hashOfConfig":"41"},{"size":1478,"mtime":1606971209791,"results":"56","hashOfConfig":"41"},{"size":1962,"mtime":1606691437861,"results":"57","hashOfConfig":"43"},{"size":3889,"mtime":1608053087236,"results":"58","hashOfConfig":"41"},{"size":1018,"mtime":1606762734515,"results":"59","hashOfConfig":"41"},{"size":3811,"mtime":1607018214562,"results":"60","hashOfConfig":"43"},{"size":2184,"mtime":1606867602502,"results":"61","hashOfConfig":"43"},{"size":4531,"mtime":1607018170537,"results":"62","hashOfConfig":"43"},{"size":852,"mtime":1606865435925,"results":"63","hashOfConfig":"43"},{"size":442,"mtime":1608078178911,"results":"64","hashOfConfig":"41"},{"size":230,"mtime":1606867679787,"results":"65","hashOfConfig":"43"},{"size":430,"mtime":1606867536055,"results":"66","hashOfConfig":"43"},{"size":1319,"mtime":1607123383982,"results":"67","hashOfConfig":"41"},{"size":2404,"mtime":1608049615617,"results":"68","hashOfConfig":"41"},{"size":4413,"mtime":1606880872215,"results":"69","hashOfConfig":"43"},{"size":323,"mtime":1606884213970,"results":"70","hashOfConfig":"41"},{"size":2324,"mtime":1607558122500,"results":"71","hashOfConfig":"41"},{"size":1342,"mtime":1606613325883,"results":"72","hashOfConfig":"41"},{"size":2201,"mtime":1608075815566,"results":"73","hashOfConfig":"41"},{"size":2666,"mtime":1608049115190,"results":"74","hashOfConfig":"41"},{"size":915,"mtime":1606434072191,"results":"75","hashOfConfig":"41"},{"size":8740,"mtime":1607559969261,"results":"76","hashOfConfig":"41"},{"size":5065,"mtime":1607619561712,"results":"77","hashOfConfig":"41"},{"size":1984,"mtime":1607115051919,"results":"78","hashOfConfig":"41"},{"size":18376,"mtime":1608180775594,"results":"79","hashOfConfig":"41"},{"size":501,"mtime":1608074670219,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6chska",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1keiamg",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx",[],["166","167"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx",[],["168","169"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx",["170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    Form,\r\n    Grid,\r\n    Input,\r\n    Button,\r\n    Message,\r\n    Icon,\r\n    Divider,\r\n    Container,\r\n    Step,\r\n} from 'semantic-ui-react';\r\nimport { reset } from 'redux-form';\r\nimport { formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport MemberModalButton from './FindMemberModal';\r\nimport BuyModalButton from './BuyModal';\r\nimport Proptype from 'prop-types';\r\n\r\nconst FindForm = (props) => {\r\n    const {\r\n        handleSubmit,\r\n        findForm: { submitSucceeded },\r\n        phone,\r\n        membership,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        phoneProps,\r\n        history,\r\n    } = props;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const loginUser = (values) => {\r\n        console.log('LoginForm was submitted', { values });\r\n    };\r\n\r\n    const clearErrorMessage = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            textAlign='center'\r\n            style={{ height: '100vh' }}\r\n            verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Form onSubmit={handleSubmit(loginUser)} size='large'>\r\n                    <Field {...phoneProps} onFocus={clearErrorMessage} />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='membership'\r\n                        placeholder='xxxxxxx'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='address card'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='firstName'\r\n                        placeholder='First Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='lastName'\r\n                        placeholder='Last Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <MemberModalButton />\r\n                    <Form.Button\r\n                        circular\r\n                        fluid\r\n                        size='massive'\r\n                        color='blue'\r\n                        content='Logout'\r\n                        icon='sign-out'\r\n                        labelPosition='right'\r\n                        onClick={(event, data) => {\r\n                            event.preventDefault();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Form>\r\n                {errorMessage ? (\r\n                    <Message icon color='pink'>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Header>{errorMessage}</Message.Header>\r\n                    </Message>\r\n                ) : null}\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFindForm.defaultProps = {\r\n    phoneProps: {\r\n        className: 'findPhoneField',\r\n        component: Form.Input,\r\n        name: 'phone',\r\n        type: 'tel',\r\n        placeholder: '(408)-123-4567',\r\n        focus: true,\r\n        size: 'massive',\r\n        fluid: true,\r\n        icon: 'phone',\r\n        iconPosition: 'left',\r\n        transparent: true,\r\n        inverted: true,\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('find');\r\n    return {\r\n        phone: selectFormData(state, 'phone'),\r\n        membership: selectFormData(state, 'membership'),\r\n        firstName: selectFormData(state, 'firstName'),\r\n        lastName: selectFormData(state, 'lastName'),\r\n        findForm: state.form.find\r\n            ? {\r\n                  values: state.form.find.values,\r\n                  submitSucceeded: state.form.find.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('find')),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(reduxForm({ form: 'find' })(FindForm));\r\n",["183","184"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx",["185"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx",["186","187"],"import React from 'react';\r\nimport { List, Button } from 'semantic-ui-react';\r\nimport BuyModal from './BuyModal';\r\n\r\nconst MemberRow = (props) => {\r\n    const [open, openBuyModal] = React.useState(false);\r\n    const { close } = props;\r\n\r\n    return (\r\n        <List verticalAlign='middle' size='large' inverted>\r\n            <List.Item>\r\n                <List.Content floated='right'>\r\n                    {/* <BuyModal\r\n                        setOpen={openBuyModal}\r\n                        open={open}\r\n                        closeOnDimmerClick={false}\r\n                        closeOnEscape={false}\r\n                        hideField={props.hideField}\r\n                        hideMemberRow={props.hideRow}\r\n                    /> */}\r\n\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='pink'\r\n                                content='Buy'\r\n                                labelPosition='right'\r\n                                icon='plus cart'\r\n                                onClick={() => {\r\n                                    openBuyModal(true);\r\n                                    props.hideRow(true);\r\n                                    props.history.push('/buy');\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='facebook'\r\n                                content='Renew'\r\n                                labelPosition='right'\r\n                                icon='redo'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='twitter'\r\n                                content='Edit'\r\n                                labelPosition='right'\r\n                                icon='edit'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Invoice'\r\n                                labelPosition='right'\r\n                                icon='sticky note'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='red'\r\n                                content='Done'\r\n                                labelPosition='right'\r\n                                icon='close'\r\n                                onClick={close}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n                <List.Content>\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='302039'\r\n                                icon='gg'\r\n                            />\r\n                            <Button\r\n                                inverted\r\n                                circular\r\n                                color='grey'\r\n                                size='large'\r\n                                content='Hung Quach'\r\n                                icon='user'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Gallon Remain'\r\n                                icon='flask'\r\n                                label={{\r\n                                    basic: true,\r\n                                    color: 'blue',\r\n                                    content: '50',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n            </List.Item>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default MemberRow;\r\n",["188","189"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx",["190","191","192","193","194","195","196","197","198","199","200"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { TransitionablePortal, Segment, Button, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport MemberRow from '../MemberRow';\r\nimport BuyForm from '../BuyForm';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const { phone, account, firstName, lastName, history } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    // const [animation, setAnimation] = useState('fade');\r\n    const [duration, setDuration] = useState(800);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('FindContainer', { props });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onStart={() => console.log('onStart', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {/* <MemberRow /> */}\r\n                            <Segment inverted raised color='blue'>\r\n                                <BuyForm />\r\n                                <MemberRow />\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('membership')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }) => {\r\n            console.log('FindForm was submitted', {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"201","replacedBy":"205"},{"ruleId":"203","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":6,"column":5,"nodeType":"209","messageId":"210","endLine":6,"endColumn":10},{"ruleId":"207","severity":1,"message":"211","line":7,"column":5,"nodeType":"209","messageId":"210","endLine":7,"endColumn":11},{"ruleId":"207","severity":1,"message":"212","line":10,"column":5,"nodeType":"209","messageId":"210","endLine":10,"endColumn":12},{"ruleId":"207","severity":1,"message":"213","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":11,"endColumn":14},{"ruleId":"207","severity":1,"message":"214","line":12,"column":5,"nodeType":"209","messageId":"210","endLine":12,"endColumn":9},{"ruleId":"207","severity":1,"message":"215","line":18,"column":8,"nodeType":"209","messageId":"210","endLine":18,"endColumn":22},{"ruleId":"207","severity":1,"message":"216","line":19,"column":8,"nodeType":"209","messageId":"210","endLine":19,"endColumn":16},{"ruleId":"207","severity":1,"message":"217","line":24,"column":21,"nodeType":"209","messageId":"210","endLine":24,"endColumn":36},{"ruleId":"207","severity":1,"message":"218","line":25,"column":9,"nodeType":"209","messageId":"210","endLine":25,"endColumn":14},{"ruleId":"207","severity":1,"message":"219","line":26,"column":9,"nodeType":"209","messageId":"210","endLine":26,"endColumn":19},{"ruleId":"207","severity":1,"message":"220","line":27,"column":9,"nodeType":"209","messageId":"210","endLine":27,"endColumn":18},{"ruleId":"207","severity":1,"message":"221","line":28,"column":9,"nodeType":"209","messageId":"210","endLine":28,"endColumn":17},{"ruleId":"207","severity":1,"message":"222","line":29,"column":9,"nodeType":"209","messageId":"210","endLine":29,"endColumn":18},{"ruleId":"201","replacedBy":"223"},{"ruleId":"203","replacedBy":"224"},{"ruleId":"207","severity":1,"message":"225","line":18,"column":9,"nodeType":"209","messageId":"210","endLine":18,"endColumn":16},{"ruleId":"207","severity":1,"message":"226","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":16},{"ruleId":"207","severity":1,"message":"227","line":6,"column":12,"nodeType":"209","messageId":"210","endLine":6,"endColumn":16},{"ruleId":"201","replacedBy":"228"},{"ruleId":"203","replacedBy":"229"},{"ruleId":"207","severity":1,"message":"211","line":3,"column":41,"nodeType":"209","messageId":"210","endLine":3,"endColumn":47},{"ruleId":"207","severity":1,"message":"230","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":16},{"ruleId":"207","severity":1,"message":"231","line":14,"column":12,"nodeType":"209","messageId":"210","endLine":14,"endColumn":24},{"ruleId":"207","severity":1,"message":"232","line":14,"column":26,"nodeType":"209","messageId":"210","endLine":14,"endColumn":41},{"ruleId":"207","severity":1,"message":"233","line":15,"column":12,"nodeType":"209","messageId":"210","endLine":15,"endColumn":21},{"ruleId":"207","severity":1,"message":"234","line":15,"column":23,"nodeType":"209","messageId":"210","endLine":15,"endColumn":35},{"ruleId":"207","severity":1,"message":"235","line":16,"column":18,"nodeType":"209","messageId":"210","endLine":16,"endColumn":25},{"ruleId":"207","severity":1,"message":"236","line":17,"column":23,"nodeType":"209","messageId":"210","endLine":17,"endColumn":35},{"ruleId":"207","severity":1,"message":"237","line":20,"column":21,"nodeType":"209","messageId":"210","endLine":20,"endColumn":31},{"ruleId":"207","severity":1,"message":"238","line":21,"column":12,"nodeType":"209","messageId":"210","endLine":21,"endColumn":28},{"ruleId":"207","severity":1,"message":"239","line":21,"column":30,"nodeType":"209","messageId":"210","endLine":21,"endColumn":49},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'Step' is defined but never used.","'BuyModalButton' is defined but never used.","'Proptype' is defined but never used.","'submitSucceeded' is assigned a value but never used.","'phone' is assigned a value but never used.","'membership' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'clearForm' is assigned a value but never used.",["240"],["241"],"'history' is assigned a value but never used.","'BuyModal' is defined but never used.","'open' is assigned a value but never used.",["240"],["241"],"'FindGrid' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'iconColor' is assigned a value but never used.","'setIconColor' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","'setCloseMe' is assigned a value but never used.","'hideLogoutButton' is assigned a value but never used.","'setHideLogoutButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]