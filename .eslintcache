[{"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js":"1","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx":"2","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx":"3","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx":"4","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js":"5","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx":"6","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx":"7","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx":"8","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx":"9","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js":"10","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx":"11","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx":"12","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx":"13","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx":"14","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx":"15","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx":"16","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx":"17","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx":"18","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx":"19","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx":"20","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx":"21","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx":"22","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js":"23","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx":"24","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx":"25","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx":"26","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx":"27","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx":"28","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx":"29","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js":"30","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx":"31","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx":"32","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx":"33","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx":"34","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx":"35","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx":"36","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx":"37","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx":"38","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js":"39","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx":"40","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx":"41","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js":"42","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx":"43","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx":"44","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddScreen.jsx":"45","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddForm.jsx":"46","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Phone.jsx":"47","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Invoice.jsx":"48"},{"size":651,"mtime":1609467027942,"results":"49","hashOfConfig":"50"},{"size":476,"mtime":1606623088205,"results":"51","hashOfConfig":"52"},{"size":3217,"mtime":1609368674883,"results":"53","hashOfConfig":"50"},{"size":473,"mtime":1606623429061,"results":"54","hashOfConfig":"50"},{"size":681,"mtime":1608584517617,"results":"55","hashOfConfig":"50"},{"size":1754,"mtime":1607012898410,"results":"56","hashOfConfig":"52"},{"size":1209,"mtime":1609269788980,"results":"57","hashOfConfig":"50"},{"size":1943,"mtime":1606706941401,"results":"58","hashOfConfig":"50"},{"size":5134,"mtime":1606691876711,"results":"59","hashOfConfig":"52"},{"size":325,"mtime":1606257461394,"results":"60","hashOfConfig":"50"},{"size":376,"mtime":1606613325284,"results":"61","hashOfConfig":"50"},{"size":21036,"mtime":1606276172610,"results":"62","hashOfConfig":"52"},{"size":892,"mtime":1608777192124,"results":"63","hashOfConfig":"50"},{"size":7001,"mtime":1609641254971,"results":"64","hashOfConfig":"50"},{"size":1478,"mtime":1606971209791,"results":"65","hashOfConfig":"50"},{"size":1962,"mtime":1606691437861,"results":"66","hashOfConfig":"52"},{"size":3889,"mtime":1608053087236,"results":"67","hashOfConfig":"50"},{"size":1018,"mtime":1606762734515,"results":"68","hashOfConfig":"50"},{"size":3811,"mtime":1607018214562,"results":"69","hashOfConfig":"52"},{"size":2184,"mtime":1606867602502,"results":"70","hashOfConfig":"52"},{"size":4531,"mtime":1607018170537,"results":"71","hashOfConfig":"52"},{"size":852,"mtime":1606865435925,"results":"72","hashOfConfig":"52"},{"size":640,"mtime":1609361809549,"results":"73","hashOfConfig":"50"},{"size":230,"mtime":1606867679787,"results":"74","hashOfConfig":"52"},{"size":430,"mtime":1606867536055,"results":"75","hashOfConfig":"52"},{"size":1319,"mtime":1607123383982,"results":"76","hashOfConfig":"50"},{"size":2404,"mtime":1608049615617,"results":"77","hashOfConfig":"50"},{"size":4413,"mtime":1606880872215,"results":"78","hashOfConfig":"52"},{"size":902,"mtime":1609271741211,"results":"79","hashOfConfig":"50"},{"size":3903,"mtime":1609367283875,"results":"80","hashOfConfig":"50"},{"size":1342,"mtime":1606613325883,"results":"81","hashOfConfig":"50"},{"size":2201,"mtime":1608075815566,"results":"82","hashOfConfig":"50"},{"size":2666,"mtime":1608049115190,"results":"83","hashOfConfig":"50"},{"size":915,"mtime":1606434072191,"results":"84","hashOfConfig":"50"},{"size":8740,"mtime":1607559969261,"results":"85","hashOfConfig":"50"},{"size":5065,"mtime":1607619561712,"results":"86","hashOfConfig":"50"},{"size":1984,"mtime":1607115051919,"results":"87","hashOfConfig":"50"},{"size":33573,"mtime":1608416204013,"results":"88","hashOfConfig":"50"},{"size":1879,"mtime":1609369640703,"results":"89","hashOfConfig":"50"},{"size":22859,"mtime":1609647567215,"results":"90","hashOfConfig":"50"},{"size":9908,"mtime":1609443938956,"results":"91","hashOfConfig":"50"},{"size":7533,"mtime":1609636754646,"results":"92","hashOfConfig":"50"},{"size":5892,"mtime":1608773355969,"results":"93","hashOfConfig":"50"},{"size":4527,"mtime":1608773367009,"results":"94","hashOfConfig":"50"},{"size":4668,"mtime":1609642547135,"results":"95","hashOfConfig":"50"},{"size":13984,"mtime":1609641475784,"results":"96","hashOfConfig":"50"},{"size":1403,"mtime":1608872382775,"results":"97","hashOfConfig":"50"},{"size":1532,"mtime":1609445439985,"results":"98","hashOfConfig":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"6chska",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1keiamg",{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"113"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"101"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\shared\\constants.js",[],["205","206"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginGrid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\Login.jsx",["207"],"import React, { useEffect, useState } from 'react';\r\nimport { Header, Icon, Divider } from 'semantic-ui-react';\r\nimport LoginDebug from './LoginDebug';\r\nimport LoginForm from './LoginForm';\r\nimport LoginGrid from '../Grid/Grid';\r\nimport { reduxForm, formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions';\r\n\r\nfunction Login(props) {\r\n    const {\r\n        submitSucceeded,\r\n        username,\r\n        password,\r\n        clearFormUser,\r\n        history,\r\n        login,\r\n        focusInput,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n\r\n    const clearInvalidLoginButton = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        errorMessage ? setIconColor('whiteIcon') : setIconColor('blueIcon');\r\n    }, [errorMessage]);\r\n\r\n    useEffect(() => {\r\n        const showInvalidButton = (error) => {\r\n            setErrorMessage(error);\r\n            clearFormUser();\r\n        };\r\n\r\n        const redirectUserToFindPage = (data) => {\r\n            history.push('/find');\r\n        };\r\n\r\n        if (submitSucceeded) {\r\n            login(username, password, (error, data) => {\r\n                error ? showInvalidButton(error) : redirectUserToFindPage(data);\r\n            });\r\n        }\r\n    }, [login, submitSucceeded, password, username, clearFormUser, history]);\r\n\r\n    return (\r\n        <LoginGrid>\r\n            <Header as='h1' inverted size='huge' textAlign='left'>\r\n                <Icon name='braille' color='blue' />\r\n                <Header.Content>\r\n                    Mckee Pure Water\r\n                    <Header.Subheader>Version 1.0</Header.Subheader>\r\n                </Header.Content>\r\n            </Header>\r\n            <Divider />\r\n            <Divider hidden />\r\n            <LoginForm\r\n                size='large'\r\n                handleSubmit={handleSubmit(() => {})}\r\n                iconColor={iconColor}\r\n                clearInvalidLoginButton={clearInvalidLoginButton}\r\n                errorMessage={errorMessage}\r\n                username={username}\r\n                password={password}\r\n                focusInput={focusInput}\r\n                submitSucceeded={submitSucceeded}\r\n            />\r\n            {/* <LoginDebug\r\n                username={username}\r\n                password={password}\r\n                errorMessage={errorMessage}\r\n                submitSucceeded={submitSucceeded}\r\n            /> */}\r\n        </LoginGrid>\r\n    );\r\n}\r\n\r\nLogin.defaultProps = {\r\n    gridProps: {\r\n        textAlign: 'center',\r\n        style: { height: '100vh' },\r\n        verticalAlign: 'middle',\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('user');\r\n    return {\r\n        username: selectFormData(state, 'username') || '',\r\n        password: selectFormData(state, 'password') || '',\r\n        submitSucceeded: selectFormData(state, 'submitSucceeded'),\r\n    };\r\n};\r\n\r\nconst ReduxLoginForm = reduxForm({ form: 'user' })(Login);\r\nexport default connect(mapStateToProps, actions)(ReduxLoginForm);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\Grid.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\store.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyModal.jsx",[],["208","209"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindForm.jsx",["210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n    Form,\r\n    Grid,\r\n    Input,\r\n    Button,\r\n    Message,\r\n    Icon,\r\n    Divider,\r\n    Container,\r\n    Step,\r\n} from 'semantic-ui-react';\r\nimport { reset } from 'redux-form';\r\nimport { formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport MemberModalButton from './FindMemberModal';\r\nimport BuyModalButton from './BuyModal';\r\nimport Proptype from 'prop-types';\r\n\r\nconst FindForm = (props) => {\r\n    const {\r\n        handleSubmit,\r\n        findForm: { submitSucceeded },\r\n        phone,\r\n        membership,\r\n        firstName,\r\n        lastName,\r\n        clearForm,\r\n        phoneProps,\r\n        history,\r\n    } = props;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const loginUser = (values) => {\r\n        console.log('LoginForm was submitted', { values });\r\n    };\r\n\r\n    const clearErrorMessage = () => {\r\n        if (errorMessage) {\r\n            setErrorMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            textAlign='center'\r\n            style={{ height: '100vh' }}\r\n            verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Form onSubmit={handleSubmit(loginUser)} size='large'>\r\n                    <Field {...phoneProps} onFocus={clearErrorMessage} />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='membership'\r\n                        placeholder='xxxxxxx'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='address card'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='firstName'\r\n                        placeholder='First Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <Field\r\n                        component={Form.Input}\r\n                        name='lastName'\r\n                        placeholder='Last Name'\r\n                        focus\r\n                        size='massive'\r\n                        type='text'\r\n                        fluid\r\n                        icon='id badge'\r\n                        iconPosition='left'\r\n                        transparent\r\n                        inverted\r\n                        onFocus={() => setErrorMessage('')}\r\n                    />\r\n                    <MemberModalButton />\r\n                    <Form.Button\r\n                        circular\r\n                        fluid\r\n                        size='massive'\r\n                        color='blue'\r\n                        content='Logout'\r\n                        icon='sign-out'\r\n                        labelPosition='right'\r\n                        onClick={(event, data) => {\r\n                            event.preventDefault();\r\n                            history.push('/');\r\n                        }}\r\n                    />\r\n                </Form>\r\n                {errorMessage ? (\r\n                    <Message icon color='pink'>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Header>{errorMessage}</Message.Header>\r\n                    </Message>\r\n                ) : null}\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nFindForm.defaultProps = {\r\n    phoneProps: {\r\n        className: 'findPhoneField',\r\n        component: Form.Input,\r\n        name: 'phone',\r\n        type: 'tel',\r\n        placeholder: '(408)-123-4567',\r\n        focus: true,\r\n        size: 'massive',\r\n        fluid: true,\r\n        icon: 'phone',\r\n        iconPosition: 'left',\r\n        transparent: true,\r\n        inverted: true,\r\n    },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('find');\r\n    return {\r\n        phone: selectFormData(state, 'phone'),\r\n        membership: selectFormData(state, 'membership'),\r\n        firstName: selectFormData(state, 'firstName'),\r\n        lastName: selectFormData(state, 'lastName'),\r\n        findForm: state.form.find\r\n            ? {\r\n                  values: state.form.find.values,\r\n                  submitSucceeded: state.form.find.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('find')),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(reduxForm({ form: 'find' })(FindForm));\r\n",["223","224"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\index.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginDebug.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Dashboard.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\App.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\Find.jsx",["225"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindLogoutButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModal.jsx",["226"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\FindMemberModal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\MemberRow.jsx",["227","228"],"import React from 'react';\r\nimport { List, Button } from 'semantic-ui-react';\r\nimport BuyModal from './BuyModal';\r\n\r\nconst MemberRow = (props) => {\r\n    const [open, openBuyModal] = React.useState(false);\r\n    const { close } = props;\r\n\r\n    return (\r\n        <List verticalAlign='middle' size='large' inverted>\r\n            <List.Item>\r\n                <List.Content floated='right'>\r\n                    {/* <BuyModal\r\n                        setOpen={openBuyModal}\r\n                        open={open}\r\n                        closeOnDimmerClick={false}\r\n                        closeOnEscape={false}\r\n                        hideField={props.hideField}\r\n                        hideMemberRow={props.hideRow}\r\n                    /> */}\r\n\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='pink'\r\n                                content='Buy'\r\n                                labelPosition='right'\r\n                                icon='plus cart'\r\n                                onClick={() => {\r\n                                    openBuyModal(true);\r\n                                    props.hideRow(true);\r\n                                    props.history.push('/buy');\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='facebook'\r\n                                content='Renew'\r\n                                labelPosition='right'\r\n                                icon='redo'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='twitter'\r\n                                content='Edit'\r\n                                labelPosition='right'\r\n                                icon='edit'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Invoice'\r\n                                labelPosition='right'\r\n                                icon='sticky note'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                size='large'\r\n                                color='red'\r\n                                content='Done'\r\n                                labelPosition='right'\r\n                                icon='close'\r\n                                onClick={close}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n                <List.Content>\r\n                    {!props.hide ? (\r\n                        <>\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='302039'\r\n                                icon='gg'\r\n                            />\r\n                            <Button\r\n                                inverted\r\n                                circular\r\n                                color='grey'\r\n                                size='large'\r\n                                content='Hung Quach'\r\n                                icon='user'\r\n                            />\r\n                            <Button\r\n                                circular\r\n                                inverted\r\n                                size='large'\r\n                                color='grey'\r\n                                content='Gallon Remain'\r\n                                icon='flask'\r\n                                label={{\r\n                                    basic: true,\r\n                                    color: 'blue',\r\n                                    content: '50',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    ) : null}\r\n                </List.Content>\r\n            </List.Item>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default MemberRow;\r\n",["229","230"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindMembershipButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\types.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalHeader.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindModalCloseButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindAccountInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindNameInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Membership\\Membership.jsx",["231","232","233","234","235","236","237","238","239","240","241"],"import React, { useEffect, useState } from 'react';\r\nimport { reduxForm, reset, formValueSelector } from 'redux-form';\r\nimport { TransitionablePortal, Segment, Button, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { channels } from '../../../shared/constants';\r\nimport FindGrid from '../Grid/Grid';\r\nimport MemberRow from '../MemberRow';\r\nimport BuyForm from '../BuyForm';\r\nconst { ipcRenderer } = window;\r\n\r\nfunction FindContainer(props) {\r\n    const { phone, account, firstName, lastName, history } = props;\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [iconColor, setIconColor] = useState('blueIcon');\r\n    const [open, setOpen] = useState(props.user_id ? true : false);\r\n    const [animation, setAnimation] = useState('vertical flip');\r\n    // const [animation, setAnimation] = useState('fade');\r\n    const [duration, setDuration] = useState(800);\r\n    const [closeMe, setCloseMe] = useState(false);\r\n    const [hideLogoutButton, setHideLogoutButton] = React.useState(false);\r\n    const [disableFindButton, setDisableFindButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('FindContainer', { props });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props.user_id) {\r\n            history.push('/');\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (closeMe) {\r\n            setDuration(0);\r\n        }\r\n    }, [closeMe, setDuration]);\r\n\r\n    useEffect(() => {\r\n        if (!phone && !account && !lastName && !firstName) {\r\n            setDisableFindButton(true);\r\n        } else {\r\n            phone.length === 8 ||\r\n            account.length === 5 ||\r\n            (firstName && lastName)\r\n                ? setDisableFindButton(false)\r\n                : setDisableFindButton(true);\r\n        }\r\n    }, [\r\n        phone,\r\n        account,\r\n        firstName,\r\n        lastName,\r\n        disableFindButton,\r\n        setDisableFindButton,\r\n    ]);\r\n\r\n    return (\r\n        <TransitionablePortal\r\n            open={open}\r\n            transition={{ animation, duration }}\r\n            onStart={() => console.log('onStart', { open })}\r\n            onHide={() => console.log('closing trans', { open })}>\r\n            <Segment\r\n                style={{\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                    zIndex: 1000,\r\n                    backgroundColor: '#002b487d',\r\n                }}>\r\n                <Grid style={{ height: '100vh' }} verticalAlign='middle'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            {/* <MemberRow /> */}\r\n                            <Segment inverted raised color='blue'>\r\n                                <BuyForm />\r\n                                <MemberRow />\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </TransitionablePortal>\r\n    );\r\n}\r\n\r\nFindContainer.defaultProps = {};\r\nFindContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const selectFormData = formValueSelector('membership');\r\n    return {\r\n        user_id: state.auth.user_id,\r\n        phone: selectFormData(state, 'phone') || '',\r\n        account: selectFormData(state, 'account') || '',\r\n        firstName: selectFormData(state, 'firstName') || '',\r\n        lastName: selectFormData(state, 'lastName') || '',\r\n        submitSucceeded: state.form.membership\r\n            ? state.form.membership.submitSucceeded\r\n            : {},\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearForm: () => dispatch(reset('membership')),\r\n        focusInput: (name) => {\r\n            document.getElementById(name).focus();\r\n        },\r\n        find: ({ phone, account, firstName, lastName }) => {\r\n            console.log('FindForm was submitted', {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n            ipcRenderer.send(channels.FIND_MEMBERSHIP, {\r\n                phone,\r\n                account,\r\n                firstName,\r\n                lastName,\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nconst ReduxFindFrom = reduxForm({ form: 'membership' })(FindContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxFindFrom);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Debug\\DebugMessage.jsx",["242"],"import React from 'react';\r\nimport { Form, Message, Divider } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { formValueSelector } from 'redux-form';\r\n\r\nconst DebugMessage = (props) => (\r\n    <Form.Group>\r\n        <Divider hidden />\r\n        <Message>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </Message>\r\n    </Form.Group>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        membership: state.membership,\r\n        account: state.account,\r\n        loginForm: state.form.user ? state.form.user.values : {},\r\n        findForm: state.form.membership\r\n            ? {\r\n                  values: state.form.membership.values,\r\n                  submitSucceeded: state.form.membership.submitSucceeded,\r\n              }\r\n            : {},\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DebugMessage);\r\n","C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\reducers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Login\\LoginField.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Grid\\FindPhoneInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyPortal.jsx",[],["243","244"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyInput.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\MembershipPortal.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Find\\FindFormButton.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AccountPortal.jsx",["245","246"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\helpers\\helpers.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyScreen.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyForm.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\actions.js",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\BuyReceipt.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\RenewReceipt.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddScreen.jsx",["247"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\AddForm.jsx",["248","249","250","251","252","253","254","255"],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Phone.jsx",[],"C:\\Users\\hungq\\Development\\electron-cra-example-master\\src\\react\\components\\Portal\\Invoice.jsx",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":18},{"ruleId":"256","replacedBy":"264"},{"ruleId":"258","replacedBy":"265"},{"ruleId":"260","severity":1,"message":"266","line":6,"column":5,"nodeType":"262","messageId":"263","endLine":6,"endColumn":10},{"ruleId":"260","severity":1,"message":"267","line":7,"column":5,"nodeType":"262","messageId":"263","endLine":7,"endColumn":11},{"ruleId":"260","severity":1,"message":"268","line":10,"column":5,"nodeType":"262","messageId":"263","endLine":10,"endColumn":12},{"ruleId":"260","severity":1,"message":"269","line":11,"column":5,"nodeType":"262","messageId":"263","endLine":11,"endColumn":14},{"ruleId":"260","severity":1,"message":"270","line":12,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":9},{"ruleId":"260","severity":1,"message":"271","line":18,"column":8,"nodeType":"262","messageId":"263","endLine":18,"endColumn":22},{"ruleId":"260","severity":1,"message":"272","line":19,"column":8,"nodeType":"262","messageId":"263","endLine":19,"endColumn":16},{"ruleId":"260","severity":1,"message":"273","line":24,"column":21,"nodeType":"262","messageId":"263","endLine":24,"endColumn":36},{"ruleId":"260","severity":1,"message":"274","line":25,"column":9,"nodeType":"262","messageId":"263","endLine":25,"endColumn":14},{"ruleId":"260","severity":1,"message":"275","line":26,"column":9,"nodeType":"262","messageId":"263","endLine":26,"endColumn":19},{"ruleId":"260","severity":1,"message":"276","line":27,"column":9,"nodeType":"262","messageId":"263","endLine":27,"endColumn":18},{"ruleId":"260","severity":1,"message":"277","line":28,"column":9,"nodeType":"262","messageId":"263","endLine":28,"endColumn":17},{"ruleId":"260","severity":1,"message":"278","line":29,"column":9,"nodeType":"262","messageId":"263","endLine":29,"endColumn":18},{"ruleId":"256","replacedBy":"279"},{"ruleId":"258","replacedBy":"280"},{"ruleId":"260","severity":1,"message":"281","line":15,"column":8,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"282","line":18,"column":9,"nodeType":"262","messageId":"263","endLine":18,"endColumn":16},{"ruleId":"260","severity":1,"message":"283","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":16},{"ruleId":"260","severity":1,"message":"284","line":6,"column":12,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"256","replacedBy":"285"},{"ruleId":"258","replacedBy":"286"},{"ruleId":"260","severity":1,"message":"267","line":3,"column":41,"nodeType":"262","messageId":"263","endLine":3,"endColumn":47},{"ruleId":"260","severity":1,"message":"287","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"288","line":14,"column":12,"nodeType":"262","messageId":"263","endLine":14,"endColumn":24},{"ruleId":"260","severity":1,"message":"289","line":14,"column":26,"nodeType":"262","messageId":"263","endLine":14,"endColumn":41},{"ruleId":"260","severity":1,"message":"290","line":15,"column":12,"nodeType":"262","messageId":"263","endLine":15,"endColumn":21},{"ruleId":"260","severity":1,"message":"291","line":15,"column":23,"nodeType":"262","messageId":"263","endLine":15,"endColumn":35},{"ruleId":"260","severity":1,"message":"292","line":16,"column":18,"nodeType":"262","messageId":"263","endLine":16,"endColumn":25},{"ruleId":"260","severity":1,"message":"293","line":17,"column":23,"nodeType":"262","messageId":"263","endLine":17,"endColumn":35},{"ruleId":"260","severity":1,"message":"294","line":20,"column":21,"nodeType":"262","messageId":"263","endLine":20,"endColumn":31},{"ruleId":"260","severity":1,"message":"295","line":21,"column":12,"nodeType":"262","messageId":"263","endLine":21,"endColumn":28},{"ruleId":"260","severity":1,"message":"296","line":21,"column":30,"nodeType":"262","messageId":"263","endLine":21,"endColumn":49},{"ruleId":"260","severity":1,"message":"297","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":27},{"ruleId":"256","replacedBy":"298"},{"ruleId":"258","replacedBy":"299"},{"ruleId":"260","severity":1,"message":"300","line":57,"column":12,"nodeType":"262","messageId":"263","endLine":57,"endColumn":16},{"ruleId":"260","severity":1,"message":"301","line":57,"column":18,"nodeType":"262","messageId":"263","endLine":57,"endColumn":25},{"ruleId":"260","severity":1,"message":"302","line":13,"column":8,"nodeType":"262","messageId":"263","endLine":13,"endColumn":20},{"ruleId":"260","severity":1,"message":"303","line":16,"column":9,"nodeType":"262","messageId":"263","endLine":16,"endColumn":22},{"ruleId":"260","severity":1,"message":"304","line":24,"column":12,"nodeType":"262","messageId":"263","endLine":24,"endColumn":25},{"ruleId":"260","severity":1,"message":"305","line":25,"column":12,"nodeType":"262","messageId":"263","endLine":25,"endColumn":21},{"ruleId":"260","severity":1,"message":"306","line":25,"column":23,"nodeType":"262","messageId":"263","endLine":25,"endColumn":35},{"ruleId":"260","severity":1,"message":"307","line":26,"column":12,"nodeType":"262","messageId":"263","endLine":26,"endColumn":18},{"ruleId":"260","severity":1,"message":"308","line":30,"column":23,"nodeType":"262","messageId":"263","endLine":30,"endColumn":35},{"ruleId":"260","severity":1,"message":"309","line":33,"column":34,"nodeType":"262","messageId":"263","endLine":33,"endColumn":57},{"ruleId":"260","severity":1,"message":"310","line":34,"column":24,"nodeType":"262","messageId":"263","endLine":34,"endColumn":37},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'LoginDebug' is defined but never used.","Identifier","unusedVar",["311"],["312"],"'Input' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'Step' is defined but never used.","'BuyModalButton' is defined but never used.","'Proptype' is defined but never used.","'submitSucceeded' is assigned a value but never used.","'phone' is assigned a value but never used.","'membership' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'clearForm' is assigned a value but never used.",["311"],["312"],"'Debug' is defined but never used.","'history' is assigned a value but never used.","'BuyModal' is defined but never used.","'open' is assigned a value but never used.",["311"],["312"],"'FindGrid' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'iconColor' is assigned a value but never used.","'setIconColor' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","'setCloseMe' is assigned a value but never used.","'hideLogoutButton' is assigned a value but never used.","'setHideLogoutButton' is assigned a value but never used.","'formValueSelector' is defined but never used.",["311"],["312"],"'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'DebugMessage' is defined but never used.","'getLastRecord' is assigned a value but never used.","'currentGallon' is assigned a value but never used.","'buyGallon' is assigned a value but never used.","'setBuyGallon' is assigned a value but never used.","'remain' is assigned a value but never used.","'setNewMember' is assigned a value but never used.","'setErrorAreaCodeMessage' is assigned a value but never used.","'setErrorPhone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]